; ModuleID = 'benchmarks/steeringControl/steeringControl.c'
source_filename = "benchmarks/steeringControl/steeringControl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.INPUT_VAL = type { double, double }
%struct.RETURN_VAL = type { double }

; Function Attrs: nounwind uwtable
define dso_local noalias i8* @controller(%struct.INPUT_VAL* nocapture readonly %input, %struct.RETURN_VAL* nocapture %ret_val) local_unnamed_addr #0 !dbg !9 {
entry:
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !26, metadata !DIExpression()), !dbg !38
  call void @llvm.dbg.value(metadata %struct.RETURN_VAL* %ret_val, metadata !27, metadata !DIExpression()), !dbg !39
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !28, metadata !DIExpression()), !dbg !40
  call void @llvm.dbg.value(metadata double 2.948890e+01, metadata !29, metadata !DIExpression()), !dbg !41
  call void @llvm.dbg.value(metadata double 1.000000e+00, metadata !30, metadata !DIExpression()), !dbg !42
  call void @llvm.dbg.value(metadata double 8.410100e+04, metadata !31, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata double 4.000000e+01, metadata !32, metadata !DIExpression()), !dbg !44
  call void @llvm.dbg.value(metadata double 1.000000e+01, metadata !33, metadata !DIExpression()), !dbg !45
  %state_v = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 0, !dbg !46
  %0 = load double, double* %state_v, align 8, !dbg !46, !tbaa !47
  call void @llvm.dbg.value(metadata double %0, metadata !36, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !37, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref, DW_OP_stack_value)), !dbg !53
  %sub1 = fadd double %0, -1.000000e+01, !dbg !54
  %mul = fmul double %sub1, 8.410100e+04, !dbg !55
  %add15 = fsub double 1.000000e+01, %mul, !dbg !55
  %next_u = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 0, !dbg !56
  store double %add15, double* %next_u, align 8, !dbg !57, !tbaa !58
  ret i8* null, !dbg !60
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "benchmarks/steeringControl/steeringControl.c", directory: "/media/sunandan/DATA/workspace/fmsafe_tool/src")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{!"clang version 7.0.0 "}
!9 = distinct !DISubprogram(name: "controller", scope: !1, file: !1, line: 4, type: !10, isLocal: false, isDefinition: true, scopeLine: 5, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !25)
!10 = !DISubroutineType(types: !11)
!11 = !{!4, !12, !20}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "INPUT_VAL", file: !14, line: 10, baseType: !15)
!14 = !DIFile(filename: "benchmarks/steeringControl/steeringControl.h", directory: "/media/sunandan/DATA/workspace/fmsafe_tool/src")
!15 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 6, size: 128, elements: !16)
!16 = !{!17, !19}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "state_v", scope: !15, file: !14, line: 7, baseType: !18, size: 64)
!18 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "state_prev_error_i", scope: !15, file: !14, line: 8, baseType: !18, size: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_VAL", file: !14, line: 4, baseType: !22)
!22 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 2, size: 64, elements: !23)
!23 = !{!24}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "next_u", scope: !22, file: !14, line: 3, baseType: !18, size: 64)
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37}
!26 = !DILocalVariable(name: "input", arg: 1, scope: !9, file: !1, line: 4, type: !12)
!27 = !DILocalVariable(name: "ret_val", arg: 2, scope: !9, file: !1, line: 4, type: !20)
!28 = !DILocalVariable(name: "pid_op", scope: !9, file: !1, line: 6, type: !18)
!29 = !DILocalVariable(name: "K", scope: !9, file: !1, line: 7, type: !18)
!30 = !DILocalVariable(name: "Nbar", scope: !9, file: !1, line: 8, type: !18)
!31 = !DILocalVariable(name: "KP", scope: !9, file: !1, line: 10, type: !18)
!32 = !DILocalVariable(name: "KI", scope: !9, file: !1, line: 11, type: !18)
!33 = !DILocalVariable(name: "ref", scope: !9, file: !1, line: 12, type: !18)
!34 = !DILocalVariable(name: "error", scope: !9, file: !1, line: 13, type: !18)
!35 = !DILocalVariable(name: "error_i", scope: !9, file: !1, line: 13, type: !18)
!36 = !DILocalVariable(name: "v", scope: !9, file: !1, line: 15, type: !18)
!37 = !DILocalVariable(name: "prev_error_i", scope: !9, file: !1, line: 17, type: !18)
!38 = !DILocation(line: 4, column: 29, scope: !9)
!39 = !DILocation(line: 4, column: 48, scope: !9)
!40 = !DILocation(line: 6, column: 10, scope: !9)
!41 = !DILocation(line: 7, column: 10, scope: !9)
!42 = !DILocation(line: 8, column: 10, scope: !9)
!43 = !DILocation(line: 10, column: 10, scope: !9)
!44 = !DILocation(line: 11, column: 10, scope: !9)
!45 = !DILocation(line: 12, column: 10, scope: !9)
!46 = !DILocation(line: 15, column: 21, scope: !9)
!47 = !{!48, !49, i64 0}
!48 = !{!"", !49, i64 0, !49, i64 8}
!49 = !{!"double", !50, i64 0}
!50 = !{!"omnipotent char", !51, i64 0}
!51 = !{!"Simple C/C++ TBAA"}
!52 = !DILocation(line: 15, column: 10, scope: !9)
!53 = !DILocation(line: 17, column: 12, scope: !9)
!54 = !DILocation(line: 27, column: 29, scope: !9)
!55 = !DILocation(line: 27, column: 26, scope: !9)
!56 = !DILocation(line: 27, column: 14, scope: !9)
!57 = !DILocation(line: 27, column: 21, scope: !9)
!58 = !{!59, !49, i64 0}
!59 = !{!"", !49, i64 0}
!60 = !DILocation(line: 30, column: 5, scope: !9)
