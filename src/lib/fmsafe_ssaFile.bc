; ModuleID = 'benchmarks/thermostat/thermostat.c'
source_filename = "benchmarks/thermostat/thermostat.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.INPUT_VAL = type { double, i32, i32, i32, i32, i32 }
%struct.RETURN_VAL = type { double }

; Function Attrs: nounwind uwtable
define dso_local i8* @controller(%struct.INPUT_VAL* nocapture %input, %struct.RETURN_VAL* %ret_val) local_unnamed_addr #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !30, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata %struct.RETURN_VAL* %ret_val, metadata !31, metadata !DIExpression()), !dbg !44
  call void @llvm.dbg.value(metadata i32 0, metadata !32, metadata !DIExpression()), !dbg !45
  call void @llvm.dbg.value(metadata i32 5, metadata !37, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata double 7.000000e+01, metadata !40, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.value(metadata double 6.600000e+01, metadata !41, metadata !DIExpression()), !dbg !48
  call void @llvm.dbg.value(metadata i32 5, metadata !42, metadata !DIExpression()), !dbg !49
  %state_temperature = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 0, !dbg !50
  %0 = load double, double* %state_temperature, align 8, !dbg !50, !tbaa !51
  call void @llvm.dbg.value(metadata double %0, metadata !39, metadata !DIExpression()), !dbg !57
  %chat_detect = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 1, !dbg !58
  %1 = load i32, i32* %chat_detect, align 8, !dbg !58, !tbaa !59
  call void @llvm.dbg.value(metadata i32 %1, metadata !32, metadata !DIExpression()), !dbg !45
  %previous_cmd_to_heater = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 2, !dbg !60
  %2 = load i32, i32* %previous_cmd_to_heater, align 4, !dbg !60, !tbaa !61
  call void @llvm.dbg.value(metadata i32 %2, metadata !33, metadata !DIExpression()), !dbg !62
  %on_count = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 3, !dbg !63
  %3 = load i32, i32* %on_count, align 8, !dbg !63, !tbaa !64
  call void @llvm.dbg.value(metadata i32 %3, metadata !34, metadata !DIExpression()), !dbg !65
  %off_count = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 4, !dbg !66
  %4 = load i32, i32* %off_count, align 4, !dbg !66, !tbaa !67
  call void @llvm.dbg.value(metadata i32 %4, metadata !35, metadata !DIExpression()), !dbg !68
  %cmd_to_heater = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 5, !dbg !69
  call void @llvm.dbg.value(metadata i32* %cmd_to_heater, metadata !36, metadata !DIExpression(DW_OP_deref)), !dbg !70
  %cmp = fcmp oge double %0, 6.600000e+01, !dbg !71
  %cmp1 = fcmp olt double %0, 7.000000e+01, !dbg !73
  %or.cond = and i1 %cmp, %cmp1, !dbg !74
  br i1 %or.cond, label %if.end9, label %if.else, !dbg !74

if.else:                                          ; preds = %entry
  %cmp2 = fcmp ult double %0, 7.000000e+01, !dbg !75
  br i1 %cmp2, label %if.else4, label %if.end9, !dbg !77

if.else4:                                         ; preds = %if.else
  %cmp5 = fcmp olt double %0, 6.600000e+01, !dbg !78
  %. = select i1 %cmp5, i32 2, i32 %2, !dbg !80
  br label %if.end9, !dbg !80

if.end9:                                          ; preds = %if.else4, %if.else, %entry
  %command_to_heater.0 = phi i32 [ 3, %entry ], [ 1, %if.else ], [ %., %if.else4 ], !dbg !81
  call void @llvm.dbg.value(metadata i32 %command_to_heater.0, metadata !36, metadata !DIExpression()), !dbg !70
  %cmp10 = icmp sgt i32 %4, 4, !dbg !82
  %cmp11 = icmp sgt i32 %3, 4, !dbg !84
  %or.cond84 = or i1 %cmp11, %cmp10, !dbg !85
  call void @llvm.dbg.value(metadata i32 0, metadata !32, metadata !DIExpression()), !dbg !45
  %chatter_detect.0 = select i1 %or.cond84, i32 0, i32 %1, !dbg !85
  call void @llvm.dbg.value(metadata i32 %chatter_detect.0, metadata !32, metadata !DIExpression()), !dbg !45
  %cmp14 = icmp ne i32 %command_to_heater.0, %2, !dbg !86
  %inc = zext i1 %cmp14 to i32, !dbg !88
  %spec.select = add nsw i32 %chatter_detect.0, %inc, !dbg !88
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !32, metadata !DIExpression()), !dbg !45
  %cmp17 = icmp sgt i32 %spec.select, 4, !dbg !89
  call void @llvm.dbg.value(metadata i32 %2, metadata !36, metadata !DIExpression()), !dbg !70
  %command_to_heater.1 = select i1 %cmp17, i32 %2, i32 %command_to_heater.0, !dbg !91
  call void @llvm.dbg.value(metadata i32 %command_to_heater.1, metadata !36, metadata !DIExpression()), !dbg !70
  %cmp20 = icmp eq i32 %command_to_heater.1, 1, !dbg !92
  call void @llvm.dbg.value(metadata i32 0, metadata !34, metadata !DIExpression()), !dbg !65
  %inc22 = add nsw i32 %4, 1, !dbg !94
  call void @llvm.dbg.value(metadata i32 %inc22, metadata !35, metadata !DIExpression()), !dbg !68
  %inc24 = add nsw i32 %3, 1, !dbg !96
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !34, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32 0, metadata !35, metadata !DIExpression()), !dbg !68
  %off_counter.0 = select i1 %cmp20, i32 %inc22, i32 0, !dbg !98
  %on_counter.0 = select i1 %cmp20, i32 0, i32 %inc24, !dbg !98
  call void @llvm.dbg.value(metadata i32 %on_counter.0, metadata !34, metadata !DIExpression()), !dbg !65
  call void @llvm.dbg.value(metadata i32 %off_counter.0, metadata !35, metadata !DIExpression()), !dbg !68
  %cond = icmp eq i32 %command_to_heater.1, 3, !dbg !99
  %spec.select85 = select i1 %cond, double 7.000000e+01, double 1.000000e+02, !dbg !99
  %uVal.0 = select i1 %cmp20, double 2.000000e+01, double %spec.select85, !dbg !101
  call void @llvm.dbg.value(metadata double %uVal.0, metadata !38, metadata !DIExpression()), !dbg !102
  %next_u = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 0, !dbg !103
  store double %uVal.0, double* %next_u, align 8, !dbg !104, !tbaa !105
  store i32 %command_to_heater.1, i32* %cmd_to_heater, align 8, !dbg !107, !tbaa !108
  store i32 %spec.select, i32* %chat_detect, align 8, !dbg !109, !tbaa !59
  store i32 %command_to_heater.1, i32* %previous_cmd_to_heater, align 4, !dbg !110, !tbaa !61
  store i32 %on_counter.0, i32* %on_count, align 8, !dbg !111, !tbaa !64
  store i32 %off_counter.0, i32* %off_count, align 4, !dbg !112, !tbaa !67
  %5 = bitcast %struct.RETURN_VAL* %ret_val to i8*, !dbg !113
  ret i8* %5, !dbg !114
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "benchmarks/thermostat/thermostat.c", directory: "/media/sunandan/DATA/workspace/fmsafe_tool/src")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 7.0.0 "}
!7 = distinct !DISubprogram(name: "controller", scope: !1, file: !1, line: 8, type: !8, isLocal: false, isDefinition: true, scopeLine: 9, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !29)
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !11, !24}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "INPUT_VAL", file: !13, line: 16, baseType: !14)
!13 = !DIFile(filename: "benchmarks/thermostat/thermostat.h", directory: "/media/sunandan/DATA/workspace/fmsafe_tool/src")
!14 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 7, size: 256, elements: !15)
!15 = !{!16, !18, !20, !21, !22, !23}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "state_temperature", scope: !14, file: !13, line: 8, baseType: !17, size: 64)
!17 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "chat_detect", scope: !14, file: !13, line: 10, baseType: !19, size: 32, offset: 64)
!19 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "previous_cmd_to_heater", scope: !14, file: !13, line: 11, baseType: !19, size: 32, offset: 96)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "on_count", scope: !14, file: !13, line: 12, baseType: !19, size: 32, offset: 128)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "off_count", scope: !14, file: !13, line: 13, baseType: !19, size: 32, offset: 160)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_to_heater", scope: !14, file: !13, line: 14, baseType: !19, size: 32, offset: 192)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_VAL", file: !13, line: 5, baseType: !26)
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 2, size: 64, elements: !27)
!27 = !{!28}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "next_u", scope: !26, file: !13, line: 3, baseType: !17, size: 64)
!29 = !{!30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42}
!30 = !DILocalVariable(name: "input", arg: 1, scope: !7, file: !1, line: 8, type: !11)
!31 = !DILocalVariable(name: "ret_val", arg: 2, scope: !7, file: !1, line: 8, type: !24)
!32 = !DILocalVariable(name: "chatter_detect", scope: !7, file: !1, line: 10, type: !19)
!33 = !DILocalVariable(name: "previous_command_to_heater", scope: !7, file: !1, line: 11, type: !19)
!34 = !DILocalVariable(name: "on_counter", scope: !7, file: !1, line: 12, type: !19)
!35 = !DILocalVariable(name: "off_counter", scope: !7, file: !1, line: 12, type: !19)
!36 = !DILocalVariable(name: "command_to_heater", scope: !7, file: !1, line: 13, type: !19)
!37 = !DILocalVariable(name: "chatter_limit", scope: !7, file: !1, line: 15, type: !19)
!38 = !DILocalVariable(name: "uVal", scope: !7, file: !1, line: 16, type: !17)
!39 = !DILocalVariable(name: "room_temp", scope: !7, file: !1, line: 16, type: !17)
!40 = !DILocalVariable(name: "MAX_TEMP", scope: !7, file: !1, line: 17, type: !17)
!41 = !DILocalVariable(name: "MED_TEMP", scope: !7, file: !1, line: 17, type: !17)
!42 = !DILocalVariable(name: "NO_CHAT_FOR", scope: !7, file: !1, line: 18, type: !19)
!43 = !DILocation(line: 8, column: 29, scope: !7)
!44 = !DILocation(line: 8, column: 48, scope: !7)
!45 = !DILocation(line: 10, column: 6, scope: !7)
!46 = !DILocation(line: 15, column: 6, scope: !7)
!47 = !DILocation(line: 17, column: 9, scope: !7)
!48 = !DILocation(line: 17, column: 24, scope: !7)
!49 = !DILocation(line: 18, column: 6, scope: !7)
!50 = !DILocation(line: 21, column: 21, scope: !7)
!51 = !{!52, !53, i64 0}
!52 = !{!"", !53, i64 0, !56, i64 8, !56, i64 12, !56, i64 16, !56, i64 20, !56, i64 24}
!53 = !{!"double", !54, i64 0}
!54 = !{!"omnipotent char", !55, i64 0}
!55 = !{!"Simple C/C++ TBAA"}
!56 = !{!"int", !54, i64 0}
!57 = !DILocation(line: 16, column: 15, scope: !7)
!58 = !DILocation(line: 23, column: 26, scope: !7)
!59 = !{!52, !56, i64 8}
!60 = !DILocation(line: 24, column: 38, scope: !7)
!61 = !{!52, !56, i64 12}
!62 = !DILocation(line: 11, column: 6, scope: !7)
!63 = !DILocation(line: 25, column: 22, scope: !7)
!64 = !{!52, !56, i64 16}
!65 = !DILocation(line: 12, column: 6, scope: !7)
!66 = !DILocation(line: 26, column: 23, scope: !7)
!67 = !{!52, !56, i64 20}
!68 = !DILocation(line: 12, column: 18, scope: !7)
!69 = !DILocation(line: 27, column: 29, scope: !7)
!70 = !DILocation(line: 13, column: 6, scope: !7)
!71 = !DILocation(line: 30, column: 15, scope: !72)
!72 = distinct !DILexicalBlock(scope: !7, file: !1, line: 30, column: 5)
!73 = !DILocation(line: 30, column: 40, scope: !72)
!74 = !DILocation(line: 30, column: 27, scope: !72)
!75 = !DILocation(line: 32, column: 20, scope: !76)
!76 = distinct !DILexicalBlock(scope: !72, file: !1, line: 32, column: 10)
!77 = !DILocation(line: 32, column: 10, scope: !72)
!78 = !DILocation(line: 34, column: 20, scope: !79)
!79 = distinct !DILexicalBlock(scope: !76, file: !1, line: 34, column: 10)
!80 = !DILocation(line: 35, column: 3, scope: !79)
!81 = !DILocation(line: 0, scope: !79)
!82 = !DILocation(line: 39, column: 17, scope: !83)
!83 = distinct !DILexicalBlock(scope: !7, file: !1, line: 39, column: 5)
!84 = !DILocation(line: 39, column: 46, scope: !83)
!85 = !DILocation(line: 39, column: 32, scope: !83)
!86 = !DILocation(line: 42, column: 23, scope: !87)
!87 = distinct !DILexicalBlock(scope: !7, file: !1, line: 42, column: 5)
!88 = !DILocation(line: 42, column: 5, scope: !7)
!89 = !DILocation(line: 44, column: 20, scope: !90)
!90 = distinct !DILexicalBlock(scope: !7, file: !1, line: 44, column: 5)
!91 = !DILocation(line: 44, column: 5, scope: !7)
!92 = !DILocation(line: 47, column: 23, scope: !93)
!93 = distinct !DILexicalBlock(scope: !7, file: !1, line: 47, column: 5)
!94 = !DILocation(line: 49, column: 14, scope: !95)
!95 = distinct !DILexicalBlock(scope: !93, file: !1, line: 47, column: 29)
!96 = !DILocation(line: 51, column: 13, scope: !97)
!97 = distinct !DILexicalBlock(scope: !93, file: !1, line: 50, column: 9)
!98 = !DILocation(line: 47, column: 5, scope: !7)
!99 = !DILocation(line: 57, column: 11, scope: !100)
!100 = distinct !DILexicalBlock(scope: !7, file: !1, line: 55, column: 6)
!101 = !DILocation(line: 55, column: 6, scope: !7)
!102 = !DILocation(line: 16, column: 9, scope: !7)
!103 = !DILocation(line: 62, column: 11, scope: !7)
!104 = !DILocation(line: 62, column: 18, scope: !7)
!105 = !{!106, !53, i64 0}
!106 = !{!"", !53, i64 0}
!107 = !DILocation(line: 64, column: 24, scope: !7)
!108 = !{!52, !56, i64 24}
!109 = !DILocation(line: 65, column: 22, scope: !7)
!110 = !DILocation(line: 66, column: 33, scope: !7)
!111 = !DILocation(line: 67, column: 19, scope: !7)
!112 = !DILocation(line: 68, column: 20, scope: !7)
!113 = !DILocation(line: 70, column: 10, scope: !7)
!114 = !DILocation(line: 70, column: 3, scope: !7)
