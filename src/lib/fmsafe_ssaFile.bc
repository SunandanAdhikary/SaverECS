; ModuleID = 'benchmarks/EMB/EMB.c'
source_filename = "benchmarks/EMB/EMB.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.INPUT_VAL = type { double, double, double }
%struct.RETURN_VAL = type { double, double }

; Function Attrs: nounwind uwtable
define dso_local noalias i8* @controller(%struct.INPUT_VAL* nocapture %input, %struct.RETURN_VAL* nocapture %ret_val) local_unnamed_addr #0 !dbg !9 {
entry:
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !28, metadata !DIExpression()), !dbg !35
  call void @llvm.dbg.value(metadata %struct.RETURN_VAL* %ret_val, metadata !29, metadata !DIExpression()), !dbg !36
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !32, metadata !DIExpression(DW_OP_deref)), !dbg !37
  %state_Caliper_Position = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 1, !dbg !38
  %0 = load double, double* %state_Caliper_Position, align 8, !dbg !38, !tbaa !39
  call void @llvm.dbg.value(metadata double %0, metadata !33, metadata !DIExpression()), !dbg !44
  %prev_Xc = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 2, !dbg !45
  %1 = load double, double* %prev_Xc, align 8, !dbg !45, !tbaa !46
  call void @llvm.dbg.value(metadata double %1, metadata !34, metadata !DIExpression()), !dbg !47
  %sub = fsub double 5.000000e-02, %0, !dbg !48
  %mul = fmul double %sub, 1.000000e-03, !dbg !49
  %add = fadd double %1, %mul, !dbg !50
  call void @llvm.dbg.value(metadata double %add, metadata !31, metadata !DIExpression()), !dbg !51
  %mul2 = fmul double %sub, 1.000000e+04, !dbg !52
  %mul3 = fmul double %add, 1.000000e+03, !dbg !53
  %add4 = fadd double %mul2, %mul3, !dbg !54
  call void @llvm.dbg.value(metadata double %add4, metadata !30, metadata !DIExpression()), !dbg !55
  store double %add, double* %prev_Xc, align 8, !dbg !56, !tbaa !46
  %next_Xc = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 0, !dbg !57
  store double %add, double* %next_Xc, align 8, !dbg !58, !tbaa !59
  %next_Voltage = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 1, !dbg !61
  store double %add4, double* %next_Voltage, align 8, !dbg !62, !tbaa !63
  ret i8* null, !dbg !64
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "benchmarks/EMB/EMB.c", directory: "/media/sunandan/DATA/workspace/fmsafe_tool/src")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{!"clang version 7.0.0 "}
!9 = distinct !DISubprogram(name: "controller", scope: !1, file: !1, line: 13, type: !10, isLocal: false, isDefinition: true, scopeLine: 14, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !27)
!10 = !DISubroutineType(types: !11)
!11 = !{!4, !12, !21}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "INPUT_VAL", file: !14, line: 16, baseType: !15)
!14 = !DIFile(filename: "benchmarks/EMB/EMB.h", directory: "/media/sunandan/DATA/workspace/fmsafe_tool/src")
!15 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 8, size: 192, elements: !16)
!16 = !{!17, !19, !20}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "state_Motor_Current", scope: !15, file: !14, line: 10, baseType: !18, size: 64)
!18 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "state_Caliper_Position", scope: !15, file: !14, line: 11, baseType: !18, size: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "prev_Xc", scope: !15, file: !14, line: 13, baseType: !18, size: 64, offset: 128)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_VAL", file: !14, line: 6, baseType: !23)
!23 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 2, size: 128, elements: !24)
!24 = !{!25, !26}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "next_Xc", scope: !23, file: !14, line: 3, baseType: !18, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "next_Voltage", scope: !23, file: !14, line: 4, baseType: !18, size: 64, offset: 64)
!27 = !{!28, !29, !30, !31, !32, !33, !34}
!28 = !DILocalVariable(name: "input", arg: 1, scope: !9, file: !1, line: 13, type: !12)
!29 = !DILocalVariable(name: "ret_val", arg: 2, scope: !9, file: !1, line: 13, type: !21)
!30 = !DILocalVariable(name: "out_Voltage", scope: !9, file: !1, line: 15, type: !18)
!31 = !DILocalVariable(name: "out_Xc", scope: !9, file: !1, line: 16, type: !18)
!32 = !DILocalVariable(name: "I_temp", scope: !9, file: !1, line: 18, type: !18)
!33 = !DILocalVariable(name: "X_temp", scope: !9, file: !1, line: 18, type: !18)
!34 = !DILocalVariable(name: "prev_Xc_temp", scope: !9, file: !1, line: 19, type: !18)
!35 = !DILocation(line: 13, column: 29, scope: !9)
!36 = !DILocation(line: 13, column: 48, scope: !9)
!37 = !DILocation(line: 18, column: 9, scope: !9)
!38 = !DILocation(line: 22, column: 18, scope: !9)
!39 = !{!40, !41, i64 8}
!40 = !{!"", !41, i64 0, !41, i64 8, !41, i64 16}
!41 = !{!"double", !42, i64 0}
!42 = !{!"omnipotent char", !43, i64 0}
!43 = !{!"Simple C/C++ TBAA"}
!44 = !DILocation(line: 18, column: 17, scope: !9)
!45 = !DILocation(line: 24, column: 24, scope: !9)
!46 = !{!40, !41, i64 16}
!47 = !DILocation(line: 19, column: 9, scope: !9)
!48 = !DILocation(line: 26, column: 42, scope: !9)
!49 = !DILocation(line: 26, column: 36, scope: !9)
!50 = !DILocation(line: 26, column: 24, scope: !9)
!51 = !DILocation(line: 16, column: 9, scope: !9)
!52 = !DILocation(line: 27, column: 19, scope: !9)
!53 = !DILocation(line: 27, column: 39, scope: !9)
!54 = !DILocation(line: 27, column: 34, scope: !9)
!55 = !DILocation(line: 15, column: 9, scope: !9)
!56 = !DILocation(line: 29, column: 17, scope: !9)
!57 = !DILocation(line: 31, column: 13, scope: !9)
!58 = !DILocation(line: 31, column: 21, scope: !9)
!59 = !{!60, !41, i64 0}
!60 = !{!"", !41, i64 0, !41, i64 8}
!61 = !DILocation(line: 32, column: 13, scope: !9)
!62 = !DILocation(line: 32, column: 26, scope: !9)
!63 = !{!60, !41, i64 8}
!64 = !DILocation(line: 34, column: 3, scope: !9)
