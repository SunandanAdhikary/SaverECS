; ModuleID = 'benchmarks/yawDamper/yawDamper.c'
source_filename = "benchmarks/yawDamper/yawDamper.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.INPUT_VAL = type { double, double, double, double, double }
%struct.RETURN_VAL = type { double }

; Function Attrs: nounwind uwtable
define dso_local noalias i8* @controller(%struct.INPUT_VAL* nocapture readonly %input, %struct.RETURN_VAL* nocapture %ret_val) local_unnamed_addr #0 !dbg !9 {
entry:
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !29, metadata !DIExpression()), !dbg !37
  call void @llvm.dbg.value(metadata %struct.RETURN_VAL* %ret_val, metadata !30, metadata !DIExpression()), !dbg !38
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !31, metadata !DIExpression(DW_OP_deref)), !dbg !39
  %state_x2 = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 1, !dbg !40
  %0 = load double, double* %state_x2, align 8, !dbg !40, !tbaa !41
  call void @llvm.dbg.value(metadata double %0, metadata !32, metadata !DIExpression()), !dbg !46
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !33, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value)), !dbg !47
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !34, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_deref, DW_OP_stack_value)), !dbg !48
  %state_w = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 4, !dbg !49
  %1 = load double, double* %state_w, align 8, !dbg !49, !tbaa !50
  call void @llvm.dbg.value(metadata double %1, metadata !35, metadata !DIExpression()), !dbg !51
  %mul = fmul double %0, 2.340000e+00, !dbg !52
  %mul1 = fmul double %1, 0x3FDDF3B645A1CAC0, !dbg !53
  %sub = fsub double %mul, %mul1, !dbg !54
  call void @llvm.dbg.value(metadata double %sub, metadata !36, metadata !DIExpression()), !dbg !55
  %next_u = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 0, !dbg !56
  store double %sub, double* %next_u, align 8, !dbg !57, !tbaa !58
  ret i8* null, !dbg !60
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "benchmarks/yawDamper/yawDamper.c", directory: "/media/sunandan/DATA/fmsafe_tool/src")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{!"clang version 7.0.0 "}
!9 = distinct !DISubprogram(name: "controller", scope: !1, file: !1, line: 5, type: !10, isLocal: false, isDefinition: true, scopeLine: 6, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !28)
!10 = !DISubroutineType(types: !11)
!11 = !{!4, !12, !23}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "INPUT_VAL", file: !14, line: 18, baseType: !15)
!14 = !DIFile(filename: "benchmarks/yawDamper/yawDamper.h", directory: "/media/sunandan/DATA/fmsafe_tool/src")
!15 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 12, size: 320, elements: !16)
!16 = !{!17, !19, !20, !21, !22}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "state_x1", scope: !15, file: !14, line: 13, baseType: !18, size: 64)
!18 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "state_x2", scope: !15, file: !14, line: 14, baseType: !18, size: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "state_x3", scope: !15, file: !14, line: 15, baseType: !18, size: 64, offset: 128)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "state_x4", scope: !15, file: !14, line: 16, baseType: !18, size: 64, offset: 192)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "state_w", scope: !15, file: !14, line: 17, baseType: !18, size: 64, offset: 256)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_VAL", file: !14, line: 10, baseType: !25)
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 8, size: 64, elements: !26)
!26 = !{!27}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "next_u", scope: !25, file: !14, line: 9, baseType: !18, size: 64)
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36}
!29 = !DILocalVariable(name: "input", arg: 1, scope: !9, file: !1, line: 5, type: !12)
!30 = !DILocalVariable(name: "ret_val", arg: 2, scope: !9, file: !1, line: 5, type: !23)
!31 = !DILocalVariable(name: "x1", scope: !9, file: !1, line: 8, type: !18)
!32 = !DILocalVariable(name: "x2", scope: !9, file: !1, line: 9, type: !18)
!33 = !DILocalVariable(name: "x3", scope: !9, file: !1, line: 10, type: !18)
!34 = !DILocalVariable(name: "x4", scope: !9, file: !1, line: 11, type: !18)
!35 = !DILocalVariable(name: "w", scope: !9, file: !1, line: 12, type: !18)
!36 = !DILocalVariable(name: "u", scope: !9, file: !1, line: 14, type: !18)
!37 = !DILocation(line: 5, column: 29, scope: !9)
!38 = !DILocation(line: 5, column: 48, scope: !9)
!39 = !DILocation(line: 8, column: 9, scope: !9)
!40 = !DILocation(line: 9, column: 21, scope: !9)
!41 = !{!42, !43, i64 8}
!42 = !{!"", !43, i64 0, !43, i64 8, !43, i64 16, !43, i64 24, !43, i64 32}
!43 = !{!"double", !44, i64 0}
!44 = !{!"omnipotent char", !45, i64 0}
!45 = !{!"Simple C/C++ TBAA"}
!46 = !DILocation(line: 9, column: 9, scope: !9)
!47 = !DILocation(line: 10, column: 9, scope: !9)
!48 = !DILocation(line: 11, column: 9, scope: !9)
!49 = !DILocation(line: 12, column: 20, scope: !9)
!50 = !{!42, !43, i64 32}
!51 = !DILocation(line: 12, column: 9, scope: !9)
!52 = !DILocation(line: 16, column: 11, scope: !9)
!53 = !DILocation(line: 16, column: 30, scope: !9)
!54 = !DILocation(line: 16, column: 16, scope: !9)
!55 = !DILocation(line: 14, column: 9, scope: !9)
!56 = !DILocation(line: 18, column: 13, scope: !9)
!57 = !DILocation(line: 18, column: 20, scope: !9)
!58 = !{!59, !43, i64 0}
!59 = !{!"", !43, i64 0}
!60 = !DILocation(line: 20, column: 3, scope: !9)
