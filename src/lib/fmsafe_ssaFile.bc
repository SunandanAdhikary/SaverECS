; ModuleID = 'benchmarks/anotherBenchmarkLyap/anotherBenchmarkLyap.c'
source_filename = "benchmarks/anotherBenchmarkLyap/anotherBenchmarkLyap.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.INPUT_VAL = type { double, double, double }
%struct.RETURN_VAL = type { double }

; Function Attrs: nounwind uwtable
define dso_local i8* @controller(%struct.INPUT_VAL* nocapture readonly %input, %struct.RETURN_VAL* %ret_val) local_unnamed_addr #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !26, metadata !DIExpression()), !dbg !32
  call void @llvm.dbg.value(metadata %struct.RETURN_VAL* %ret_val, metadata !27, metadata !DIExpression()), !dbg !33
  %state_x = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 0, !dbg !34
  %0 = load double, double* %state_x, align 8, !dbg !34, !tbaa !35
  call void @llvm.dbg.value(metadata double %0, metadata !28, metadata !DIExpression()), !dbg !40
  %state_u = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 1, !dbg !41
  %1 = load double, double* %state_u, align 8, !dbg !41, !tbaa !42
  call void @llvm.dbg.value(metadata double %1, metadata !30, metadata !DIExpression()), !dbg !43
  %add = fsub double %1, %0, !dbg !44
  call void @llvm.dbg.value(metadata double %add, metadata !29, metadata !DIExpression()), !dbg !45
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !31, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value)), !dbg !46
  %next_u = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 0, !dbg !47
  store double %add, double* %next_u, align 8, !dbg !48, !tbaa !49
  %2 = bitcast %struct.RETURN_VAL* %ret_val to i8*, !dbg !51
  ret i8* %2, !dbg !52
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "benchmarks/anotherBenchmarkLyap/anotherBenchmarkLyap.c", directory: "/media/sunandan/DATA/workspace/fmsafe/src")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 7.0.0 "}
!7 = distinct !DISubprogram(name: "controller", scope: !1, file: !1, line: 8, type: !8, isLocal: false, isDefinition: true, scopeLine: 9, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !25)
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !11, !20}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "INPUT_VAL", file: !13, line: 10, baseType: !14)
!13 = !DIFile(filename: "benchmarks/anotherBenchmarkLyap/anotherBenchmarkLyap.h", directory: "/media/sunandan/DATA/workspace/fmsafe/src")
!14 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 6, size: 192, elements: !15)
!15 = !{!16, !18, !19}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "state_x", scope: !14, file: !13, line: 7, baseType: !17, size: 64)
!17 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "state_u", scope: !14, file: !13, line: 8, baseType: !17, size: 64, offset: 64)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "state_v", scope: !14, file: !13, line: 9, baseType: !17, size: 64, offset: 128)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_VAL", file: !13, line: 4, baseType: !22)
!22 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 2, size: 64, elements: !23)
!23 = !{!24}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "next_u", scope: !22, file: !13, line: 3, baseType: !17, size: 64)
!25 = !{!26, !27, !28, !29, !30, !31}
!26 = !DILocalVariable(name: "input", arg: 1, scope: !7, file: !1, line: 8, type: !11)
!27 = !DILocalVariable(name: "ret_val", arg: 2, scope: !7, file: !1, line: 8, type: !20)
!28 = !DILocalVariable(name: "temp_x", scope: !7, file: !1, line: 10, type: !17)
!29 = !DILocalVariable(name: "temp_next_u", scope: !7, file: !1, line: 11, type: !17)
!30 = !DILocalVariable(name: "temp_u", scope: !7, file: !1, line: 12, type: !17)
!31 = !DILocalVariable(name: "temp_v", scope: !7, file: !1, line: 13, type: !17)
!32 = !DILocation(line: 8, column: 29, scope: !7)
!33 = !DILocation(line: 8, column: 48, scope: !7)
!34 = !DILocation(line: 15, column: 18, scope: !7)
!35 = !{!36, !37, i64 0}
!36 = !{!"", !37, i64 0, !37, i64 8, !37, i64 16}
!37 = !{!"double", !38, i64 0}
!38 = !{!"omnipotent char", !39, i64 0}
!39 = !{!"Simple C/C++ TBAA"}
!40 = !DILocation(line: 10, column: 9, scope: !7)
!41 = !DILocation(line: 16, column: 18, scope: !7)
!42 = !{!36, !37, i64 8}
!43 = !DILocation(line: 12, column: 9, scope: !7)
!44 = !DILocation(line: 17, column: 23, scope: !7)
!45 = !DILocation(line: 11, column: 9, scope: !7)
!46 = !DILocation(line: 13, column: 9, scope: !7)
!47 = !DILocation(line: 20, column: 11, scope: !7)
!48 = !DILocation(line: 20, column: 18, scope: !7)
!49 = !{!50, !37, i64 0}
!50 = !{!"", !37, i64 0}
!51 = !DILocation(line: 22, column: 10, scope: !7)
!52 = !DILocation(line: 22, column: 3, scope: !7)
