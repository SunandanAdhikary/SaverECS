; ModuleID = 'benchmarks/powerTrainSimple/afc_simple.c'
source_filename = "benchmarks/powerTrainSimple/afc_simple.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.INPUT_VAL = type { double, double, double, double, double, double }
%struct.RETURN_VAL = type { double, double, double }

; Function Attrs: nounwind uwtable
define dso_local noalias i8* @controller(%struct.INPUT_VAL* nocapture readonly %input, %struct.RETURN_VAL* nocapture %ret_val) local_unnamed_addr #0 !dbg !9 {
entry:
  call void @llvm.dbg.value(metadata %struct.INPUT_VAL* %input, metadata !32, metadata !DIExpression()), !dbg !43
  call void @llvm.dbg.value(metadata %struct.RETURN_VAL* %ret_val, metadata !33, metadata !DIExpression()), !dbg !44
  %state_p_engine_speed = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 0, !dbg !45
  %0 = load double, double* %state_p_engine_speed, align 8, !dbg !45, !tbaa !46
  call void @llvm.dbg.value(metadata double %0, metadata !37, metadata !DIExpression()), !dbg !51
  %state_p_throttle_angle = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 1, !dbg !52
  %1 = load double, double* %state_p_throttle_angle, align 8, !dbg !52, !tbaa !53
  call void @llvm.dbg.value(metadata double %1, metadata !38, metadata !DIExpression()), !dbg !54
  %state_p_manifold_pressure = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 2, !dbg !55
  %2 = load double, double* %state_p_manifold_pressure, align 8, !dbg !55, !tbaa !56
  call void @llvm.dbg.value(metadata double %2, metadata !39, metadata !DIExpression()), !dbg !57
  %state_p_airbyfuel_meas = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 3, !dbg !58
  %3 = load double, double* %state_p_airbyfuel_meas, align 8, !dbg !58, !tbaa !59
  call void @llvm.dbg.value(metadata double %3, metadata !40, metadata !DIExpression()), !dbg !60
  %state_p_air_estimate = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 5, !dbg !61
  %4 = load double, double* %state_p_air_estimate, align 8, !dbg !61, !tbaa !62
  call void @llvm.dbg.value(metadata double %4, metadata !41, metadata !DIExpression()), !dbg !63
  %state_p_pi = getelementptr inbounds %struct.INPUT_VAL, %struct.INPUT_VAL* %input, i64 0, i32 4, !dbg !64
  %5 = load double, double* %state_p_pi, align 8, !dbg !64, !tbaa !65
  call void @llvm.dbg.value(metadata double %5, metadata !42, metadata !DIExpression()), !dbg !66
  %mul = fmul double %1, 5.231000e-02, !dbg !67
  %add90 = fsub double 2.821000e+00, %mul, !dbg !67
  %mul1 = fmul double %1, 1.029900e-01, !dbg !67
  %mul2 = fmul double %1, %mul1, !dbg !67
  %add3 = fadd double %add90, %mul2, !dbg !67
  %mul4 = fmul double %1, -6.300000e-04, !dbg !67
  %mul5 = fmul double %1, %mul4, !dbg !67
  %mul6 = fmul double %1, %mul5, !dbg !67
  %add7 = fadd double %add3, %mul6, !dbg !67
  %mul8 = fmul double %add7, 2.000000e+00, !dbg !67
  %mul9 = fmul double %2, -2.342100e+00, !dbg !67
  %mul10 = fmul double %2, %mul9, !dbg !67
  %mul11 = fmul double %2, 2.779900e+00, !dbg !67
  %add12 = fadd double %mul11, %mul10, !dbg !67
  %add13 = fadd double %add12, -3.273000e-01, !dbg !67
  %mul14 = fmul double %mul8, %add13, !dbg !67
  %mul16 = fmul double %0, 0x3FB6FC7A398201CD, !dbg !68
  %mul17 = fmul double %mul16, %4, !dbg !68
  %add18 = fadd double %mul17, -3.660000e-01, !dbg !68
  %mul19 = fmul double %0, -3.370000e-02, !dbg !68
  %mul20 = fmul double %mul19, %4, !dbg !68
  %mul21 = fmul double %4, %mul20, !dbg !68
  %add22 = fadd double %add18, %mul21, !dbg !68
  %mul23 = fmul double %0, 1.000000e-04, !dbg !68
  %mul24 = fmul double %0, %mul23, !dbg !68
  %mul25 = fmul double %mul24, %4, !dbg !68
  %add26 = fadd double %mul25, %add22, !dbg !68
  %sub = fsub double %mul14, %add26, !dbg !69
  %mul27 = fmul double %sub, 4.132800e-03, !dbg !70
  %add28 = fadd double %4, %mul27, !dbg !71
  call void @llvm.dbg.value(metadata double %add28, metadata !35, metadata !DIExpression()), !dbg !72
  %sub30 = fadd double %3, -1.470000e+01, !dbg !73
  %mul31 = fmul double %sub30, 0x3F56F0068DB8BAC8, !dbg !74
  %add32 = fadd double %5, %mul31, !dbg !75
  call void @llvm.dbg.value(metadata double %add32, metadata !36, metadata !DIExpression()), !dbg !76
  %add33 = fadd double %5, 1.000000e+00, !dbg !77
  %mul36 = fmul double %sub30, 4.000000e-02, !dbg !78
  %add37 = fadd double %mul36, %add33, !dbg !79
  %mul49 = fmul double %add37, %add26, !dbg !80
  %div = fdiv double %mul49, 1.470000e+01, !dbg !81
  call void @llvm.dbg.value(metadata double %div, metadata !34, metadata !DIExpression()), !dbg !82
  %next_c_commanded_fuel_gps = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 0, !dbg !83
  store double %div, double* %next_c_commanded_fuel_gps, align 8, !dbg !84, !tbaa !85
  %next_p_air_estimate = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 2, !dbg !87
  store double %add28, double* %next_p_air_estimate, align 8, !dbg !88, !tbaa !89
  %next_p_pi = getelementptr inbounds %struct.RETURN_VAL, %struct.RETURN_VAL* %ret_val, i64 0, i32 1, !dbg !90
  store double %add32, double* %next_p_pi, align 8, !dbg !91, !tbaa !92
  ret i8* null, !dbg !93
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "benchmarks/powerTrainSimple/afc_simple.c", directory: "/media/sunandan/DATA/workspace/fmsafe_tool/src")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{!"clang version 7.0.0 "}
!9 = distinct !DISubprogram(name: "controller", scope: !1, file: !1, line: 5, type: !10, isLocal: false, isDefinition: true, scopeLine: 7, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !31)
!10 = !DISubroutineType(types: !11)
!11 = !{!4, !12, !24}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "INPUT_VAL", file: !14, line: 62, baseType: !15)
!14 = !DIFile(filename: "benchmarks/powerTrainSimple/controller_simple.h", directory: "/media/sunandan/DATA/workspace/fmsafe_tool/src")
!15 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 45, size: 384, elements: !16)
!16 = !{!17, !19, !20, !21, !22, !23}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_engine_speed", scope: !15, file: !14, line: 50, baseType: !18, size: 64)
!18 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_throttle_angle", scope: !15, file: !14, line: 51, baseType: !18, size: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_manifold_pressure", scope: !15, file: !14, line: 52, baseType: !18, size: 64, offset: 128)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_airbyfuel_meas", scope: !15, file: !14, line: 53, baseType: !18, size: 64, offset: 192)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_pi", scope: !15, file: !14, line: 56, baseType: !18, size: 64, offset: 256)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "state_p_air_estimate", scope: !15, file: !14, line: 57, baseType: !18, size: 64, offset: 320)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_VAL", file: !14, line: 43, baseType: !26)
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 35, size: 192, elements: !27)
!27 = !{!28, !29, !30}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "next_c_commanded_fuel_gps", scope: !26, file: !14, line: 38, baseType: !18, size: 64)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_pi", scope: !26, file: !14, line: 39, baseType: !18, size: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_air_estimate", scope: !26, file: !14, line: 40, baseType: !18, size: 64, offset: 128)
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42}
!32 = !DILocalVariable(name: "input", arg: 1, scope: !9, file: !1, line: 5, type: !12)
!33 = !DILocalVariable(name: "ret_val", arg: 2, scope: !9, file: !1, line: 5, type: !24)
!34 = !DILocalVariable(name: "commanded_fuel_gps", scope: !9, file: !1, line: 10, type: !18)
!35 = !DILocalVariable(name: "pressure_est", scope: !9, file: !1, line: 11, type: !18)
!36 = !DILocalVariable(name: "integral_error", scope: !9, file: !1, line: 12, type: !18)
!37 = !DILocalVariable(name: "engine_speed", scope: !9, file: !1, line: 15, type: !18)
!38 = !DILocalVariable(name: "throttle_angle", scope: !9, file: !1, line: 16, type: !18)
!39 = !DILocalVariable(name: "manifold_pressure", scope: !9, file: !1, line: 18, type: !18)
!40 = !DILocalVariable(name: "airbyfuel_meas", scope: !9, file: !1, line: 19, type: !18)
!41 = !DILocalVariable(name: "prev_pressure_est", scope: !9, file: !1, line: 22, type: !18)
!42 = !DILocalVariable(name: "prev_integral_error", scope: !9, file: !1, line: 23, type: !18)
!43 = !DILocation(line: 5, column: 29, scope: !9)
!44 = !DILocation(line: 5, column: 48, scope: !9)
!45 = !DILocation(line: 15, column: 31, scope: !9)
!46 = !{!47, !48, i64 0}
!47 = !{!"", !48, i64 0, !48, i64 8, !48, i64 16, !48, i64 24, !48, i64 32, !48, i64 40}
!48 = !{!"double", !49, i64 0}
!49 = !{!"omnipotent char", !50, i64 0}
!50 = !{!"Simple C/C++ TBAA"}
!51 = !DILocation(line: 15, column: 9, scope: !9)
!52 = !DILocation(line: 16, column: 33, scope: !9)
!53 = !{!47, !48, i64 8}
!54 = !DILocation(line: 16, column: 9, scope: !9)
!55 = !DILocation(line: 18, column: 36, scope: !9)
!56 = !{!47, !48, i64 16}
!57 = !DILocation(line: 18, column: 9, scope: !9)
!58 = !DILocation(line: 19, column: 33, scope: !9)
!59 = !{!47, !48, i64 24}
!60 = !DILocation(line: 19, column: 9, scope: !9)
!61 = !DILocation(line: 22, column: 36, scope: !9)
!62 = !{!47, !48, i64 40}
!63 = !DILocation(line: 22, column: 9, scope: !9)
!64 = !DILocation(line: 23, column: 38, scope: !9)
!65 = !{!47, !48, i64 32}
!66 = !DILocation(line: 23, column: 9, scope: !9)
!67 = !DILocation(line: 25, column: 67, scope: !9)
!68 = !DILocation(line: 25, column: 74, scope: !9)
!69 = !DILocation(line: 25, column: 72, scope: !9)
!70 = !DILocation(line: 25, column: 58, scope: !9)
!71 = !DILocation(line: 25, column: 35, scope: !9)
!72 = !DILocation(line: 11, column: 9, scope: !9)
!73 = !DILocation(line: 26, column: 85, scope: !9)
!74 = !DILocation(line: 26, column: 61, scope: !9)
!75 = !DILocation(line: 26, column: 39, scope: !9)
!76 = !DILocation(line: 12, column: 9, scope: !9)
!77 = !DILocation(line: 27, column: 27, scope: !9)
!78 = !DILocation(line: 27, column: 56, scope: !9)
!79 = !DILocation(line: 27, column: 49, scope: !9)
!80 = !DILocation(line: 27, column: 91, scope: !9)
!81 = !DILocation(line: 27, column: 117, scope: !9)
!82 = !DILocation(line: 10, column: 9, scope: !9)
!83 = !DILocation(line: 30, column: 11, scope: !9)
!84 = !DILocation(line: 30, column: 37, scope: !9)
!85 = !{!86, !48, i64 0}
!86 = !{!"", !48, i64 0, !48, i64 8, !48, i64 16}
!87 = !DILocation(line: 31, column: 11, scope: !9)
!88 = !DILocation(line: 31, column: 31, scope: !9)
!89 = !{!86, !48, i64 16}
!90 = !DILocation(line: 32, column: 11, scope: !9)
!91 = !DILocation(line: 32, column: 21, scope: !9)
!92 = !{!86, !48, i64 8}
!93 = !DILocation(line: 34, column: 1, scope: !9)
