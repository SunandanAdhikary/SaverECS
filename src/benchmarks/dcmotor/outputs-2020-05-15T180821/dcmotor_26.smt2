(set-logic QF_NRA_ODE)
(declare-fun angVal () Real [-10000, 10000])
(declare-fun i () Real [-10000, 10000])
(declare-fun voltage () Real [-10000, 10000])
(declare-fun lt () Real [0.000000, 0.02])
(declare-fun gt () Real [0.000000, 3])
(declare-fun .add3_0 () Real [-10000, 10000] )
(declare-fun pid_op.0_0 () Real [-10000, 10000] )
(declare-fun state_angVal_0 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_0 () Real [-10000, 10000] )
(declare-fun next_voltage_0 () Real [-10000, 10000] )
(declare-fun angVal_0_0 () Real [-10000, 10000])
(declare-fun angVal_0_t () Real [-10000, 10000])
(declare-fun i_0_0 () Real [-10000, 10000])
(declare-fun i_0_t () Real [-10000, 10000])
(declare-fun voltage_0_0 () Real [-10000, 10000])
(declare-fun voltage_0_t () Real [-10000, 10000])
(declare-fun lt_0_0 () Real [0.000000, 0.02])
(declare-fun lt_0_t () Real [0.000000, 0.02])
(declare-fun gt_0_0 () Real [0.000000, 3])
(declare-fun gt_0_t () Real [0.000000, 3])
(declare-fun time_0 () Real [0.000000, 0])
(declare-fun mode_0 () Real [1.000000, 1.000000])
(declare-fun .add3_1 () Real [-10000, 10000] )
(declare-fun pid_op.0_1 () Real [-10000, 10000] )
(declare-fun state_angVal_1 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_1 () Real [-10000, 10000] )
(declare-fun next_voltage_1 () Real [-10000, 10000] )
(declare-fun angVal_1_0 () Real [-10000, 10000])
(declare-fun angVal_1_t () Real [-10000, 10000])
(declare-fun i_1_0 () Real [-10000, 10000])
(declare-fun i_1_t () Real [-10000, 10000])
(declare-fun voltage_1_0 () Real [-10000, 10000])
(declare-fun voltage_1_t () Real [-10000, 10000])
(declare-fun lt_1_0 () Real [0.000000, 0.02])
(declare-fun lt_1_t () Real [0.000000, 0.02])
(declare-fun gt_1_0 () Real [0.000000, 3])
(declare-fun gt_1_t () Real [0.000000, 3])
(declare-fun time_1 () Real [0.000000, 0.02])
(declare-fun mode_1 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_0 () Real [0.1, 0.5])
(declare-fun .add3_2 () Real [-10000, 10000] )
(declare-fun pid_op.0_2 () Real [-10000, 10000] )
(declare-fun state_angVal_2 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_2 () Real [-10000, 10000] )
(declare-fun next_voltage_2 () Real [-10000, 10000] )
(declare-fun angVal_2_0 () Real [-10000, 10000])
(declare-fun angVal_2_t () Real [-10000, 10000])
(declare-fun i_2_0 () Real [-10000, 10000])
(declare-fun i_2_t () Real [-10000, 10000])
(declare-fun voltage_2_0 () Real [-10000, 10000])
(declare-fun voltage_2_t () Real [-10000, 10000])
(declare-fun lt_2_0 () Real [0.000000, 0.02])
(declare-fun lt_2_t () Real [0.000000, 0.02])
(declare-fun gt_2_0 () Real [0.000000, 3])
(declare-fun gt_2_t () Real [0.000000, 3])
(declare-fun time_2 () Real [0.000000, 0.02])
(declare-fun mode_2 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_1 () Real [0.1, 0.5])
(declare-fun .add3_3 () Real [-10000, 10000] )
(declare-fun pid_op.0_3 () Real [-10000, 10000] )
(declare-fun state_angVal_3 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_3 () Real [-10000, 10000] )
(declare-fun next_voltage_3 () Real [-10000, 10000] )
(declare-fun angVal_3_0 () Real [-10000, 10000])
(declare-fun angVal_3_t () Real [-10000, 10000])
(declare-fun i_3_0 () Real [-10000, 10000])
(declare-fun i_3_t () Real [-10000, 10000])
(declare-fun voltage_3_0 () Real [-10000, 10000])
(declare-fun voltage_3_t () Real [-10000, 10000])
(declare-fun lt_3_0 () Real [0.000000, 0.02])
(declare-fun lt_3_t () Real [0.000000, 0.02])
(declare-fun gt_3_0 () Real [0.000000, 3])
(declare-fun gt_3_t () Real [0.000000, 3])
(declare-fun time_3 () Real [0.000000, 0.02])
(declare-fun mode_3 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_2 () Real [0.1, 0.5])
(declare-fun .add3_4 () Real [-10000, 10000] )
(declare-fun pid_op.0_4 () Real [-10000, 10000] )
(declare-fun state_angVal_4 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_4 () Real [-10000, 10000] )
(declare-fun next_voltage_4 () Real [-10000, 10000] )
(declare-fun angVal_4_0 () Real [-10000, 10000])
(declare-fun angVal_4_t () Real [-10000, 10000])
(declare-fun i_4_0 () Real [-10000, 10000])
(declare-fun i_4_t () Real [-10000, 10000])
(declare-fun voltage_4_0 () Real [-10000, 10000])
(declare-fun voltage_4_t () Real [-10000, 10000])
(declare-fun lt_4_0 () Real [0.000000, 0.02])
(declare-fun lt_4_t () Real [0.000000, 0.02])
(declare-fun gt_4_0 () Real [0.000000, 3])
(declare-fun gt_4_t () Real [0.000000, 3])
(declare-fun time_4 () Real [0.000000, 0.02])
(declare-fun mode_4 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_3 () Real [0.1, 0.5])
(declare-fun .add3_5 () Real [-10000, 10000] )
(declare-fun pid_op.0_5 () Real [-10000, 10000] )
(declare-fun state_angVal_5 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_5 () Real [-10000, 10000] )
(declare-fun next_voltage_5 () Real [-10000, 10000] )
(declare-fun angVal_5_0 () Real [-10000, 10000])
(declare-fun angVal_5_t () Real [-10000, 10000])
(declare-fun i_5_0 () Real [-10000, 10000])
(declare-fun i_5_t () Real [-10000, 10000])
(declare-fun voltage_5_0 () Real [-10000, 10000])
(declare-fun voltage_5_t () Real [-10000, 10000])
(declare-fun lt_5_0 () Real [0.000000, 0.02])
(declare-fun lt_5_t () Real [0.000000, 0.02])
(declare-fun gt_5_0 () Real [0.000000, 3])
(declare-fun gt_5_t () Real [0.000000, 3])
(declare-fun time_5 () Real [0.000000, 0.02])
(declare-fun mode_5 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_4 () Real [0.1, 0.5])
(declare-fun .add3_6 () Real [-10000, 10000] )
(declare-fun pid_op.0_6 () Real [-10000, 10000] )
(declare-fun state_angVal_6 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_6 () Real [-10000, 10000] )
(declare-fun next_voltage_6 () Real [-10000, 10000] )
(declare-fun angVal_6_0 () Real [-10000, 10000])
(declare-fun angVal_6_t () Real [-10000, 10000])
(declare-fun i_6_0 () Real [-10000, 10000])
(declare-fun i_6_t () Real [-10000, 10000])
(declare-fun voltage_6_0 () Real [-10000, 10000])
(declare-fun voltage_6_t () Real [-10000, 10000])
(declare-fun lt_6_0 () Real [0.000000, 0.02])
(declare-fun lt_6_t () Real [0.000000, 0.02])
(declare-fun gt_6_0 () Real [0.000000, 3])
(declare-fun gt_6_t () Real [0.000000, 3])
(declare-fun time_6 () Real [0.000000, 0.02])
(declare-fun mode_6 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_5 () Real [0.1, 0.5])
(declare-fun .add3_7 () Real [-10000, 10000] )
(declare-fun pid_op.0_7 () Real [-10000, 10000] )
(declare-fun state_angVal_7 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_7 () Real [-10000, 10000] )
(declare-fun next_voltage_7 () Real [-10000, 10000] )
(declare-fun angVal_7_0 () Real [-10000, 10000])
(declare-fun angVal_7_t () Real [-10000, 10000])
(declare-fun i_7_0 () Real [-10000, 10000])
(declare-fun i_7_t () Real [-10000, 10000])
(declare-fun voltage_7_0 () Real [-10000, 10000])
(declare-fun voltage_7_t () Real [-10000, 10000])
(declare-fun lt_7_0 () Real [0.000000, 0.02])
(declare-fun lt_7_t () Real [0.000000, 0.02])
(declare-fun gt_7_0 () Real [0.000000, 3])
(declare-fun gt_7_t () Real [0.000000, 3])
(declare-fun time_7 () Real [0.000000, 0.02])
(declare-fun mode_7 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_6 () Real [0.1, 0.5])
(declare-fun .add3_8 () Real [-10000, 10000] )
(declare-fun pid_op.0_8 () Real [-10000, 10000] )
(declare-fun state_angVal_8 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_8 () Real [-10000, 10000] )
(declare-fun next_voltage_8 () Real [-10000, 10000] )
(declare-fun angVal_8_0 () Real [-10000, 10000])
(declare-fun angVal_8_t () Real [-10000, 10000])
(declare-fun i_8_0 () Real [-10000, 10000])
(declare-fun i_8_t () Real [-10000, 10000])
(declare-fun voltage_8_0 () Real [-10000, 10000])
(declare-fun voltage_8_t () Real [-10000, 10000])
(declare-fun lt_8_0 () Real [0.000000, 0.02])
(declare-fun lt_8_t () Real [0.000000, 0.02])
(declare-fun gt_8_0 () Real [0.000000, 3])
(declare-fun gt_8_t () Real [0.000000, 3])
(declare-fun time_8 () Real [0.000000, 0.02])
(declare-fun mode_8 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_7 () Real [0.1, 0.5])
(declare-fun .add3_9 () Real [-10000, 10000] )
(declare-fun pid_op.0_9 () Real [-10000, 10000] )
(declare-fun state_angVal_9 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_9 () Real [-10000, 10000] )
(declare-fun next_voltage_9 () Real [-10000, 10000] )
(declare-fun angVal_9_0 () Real [-10000, 10000])
(declare-fun angVal_9_t () Real [-10000, 10000])
(declare-fun i_9_0 () Real [-10000, 10000])
(declare-fun i_9_t () Real [-10000, 10000])
(declare-fun voltage_9_0 () Real [-10000, 10000])
(declare-fun voltage_9_t () Real [-10000, 10000])
(declare-fun lt_9_0 () Real [0.000000, 0.02])
(declare-fun lt_9_t () Real [0.000000, 0.02])
(declare-fun gt_9_0 () Real [0.000000, 3])
(declare-fun gt_9_t () Real [0.000000, 3])
(declare-fun time_9 () Real [0.000000, 0.02])
(declare-fun mode_9 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_8 () Real [0.1, 0.5])
(declare-fun .add3_10 () Real [-10000, 10000] )
(declare-fun pid_op.0_10 () Real [-10000, 10000] )
(declare-fun state_angVal_10 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_10 () Real [-10000, 10000] )
(declare-fun next_voltage_10 () Real [-10000, 10000] )
(declare-fun angVal_10_0 () Real [-10000, 10000])
(declare-fun angVal_10_t () Real [-10000, 10000])
(declare-fun i_10_0 () Real [-10000, 10000])
(declare-fun i_10_t () Real [-10000, 10000])
(declare-fun voltage_10_0 () Real [-10000, 10000])
(declare-fun voltage_10_t () Real [-10000, 10000])
(declare-fun lt_10_0 () Real [0.000000, 0.02])
(declare-fun lt_10_t () Real [0.000000, 0.02])
(declare-fun gt_10_0 () Real [0.000000, 3])
(declare-fun gt_10_t () Real [0.000000, 3])
(declare-fun time_10 () Real [0.000000, 0.02])
(declare-fun mode_10 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_9 () Real [0.1, 0.5])
(declare-fun .add3_11 () Real [-10000, 10000] )
(declare-fun pid_op.0_11 () Real [-10000, 10000] )
(declare-fun state_angVal_11 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_11 () Real [-10000, 10000] )
(declare-fun next_voltage_11 () Real [-10000, 10000] )
(declare-fun angVal_11_0 () Real [-10000, 10000])
(declare-fun angVal_11_t () Real [-10000, 10000])
(declare-fun i_11_0 () Real [-10000, 10000])
(declare-fun i_11_t () Real [-10000, 10000])
(declare-fun voltage_11_0 () Real [-10000, 10000])
(declare-fun voltage_11_t () Real [-10000, 10000])
(declare-fun lt_11_0 () Real [0.000000, 0.02])
(declare-fun lt_11_t () Real [0.000000, 0.02])
(declare-fun gt_11_0 () Real [0.000000, 3])
(declare-fun gt_11_t () Real [0.000000, 3])
(declare-fun time_11 () Real [0.000000, 0.02])
(declare-fun mode_11 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_10 () Real [0.1, 0.5])
(declare-fun .add3_12 () Real [-10000, 10000] )
(declare-fun pid_op.0_12 () Real [-10000, 10000] )
(declare-fun state_angVal_12 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_12 () Real [-10000, 10000] )
(declare-fun next_voltage_12 () Real [-10000, 10000] )
(declare-fun angVal_12_0 () Real [-10000, 10000])
(declare-fun angVal_12_t () Real [-10000, 10000])
(declare-fun i_12_0 () Real [-10000, 10000])
(declare-fun i_12_t () Real [-10000, 10000])
(declare-fun voltage_12_0 () Real [-10000, 10000])
(declare-fun voltage_12_t () Real [-10000, 10000])
(declare-fun lt_12_0 () Real [0.000000, 0.02])
(declare-fun lt_12_t () Real [0.000000, 0.02])
(declare-fun gt_12_0 () Real [0.000000, 3])
(declare-fun gt_12_t () Real [0.000000, 3])
(declare-fun time_12 () Real [0.000000, 0.02])
(declare-fun mode_12 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_11 () Real [0.1, 0.5])
(declare-fun .add3_13 () Real [-10000, 10000] )
(declare-fun pid_op.0_13 () Real [-10000, 10000] )
(declare-fun state_angVal_13 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_13 () Real [-10000, 10000] )
(declare-fun next_voltage_13 () Real [-10000, 10000] )
(declare-fun angVal_13_0 () Real [-10000, 10000])
(declare-fun angVal_13_t () Real [-10000, 10000])
(declare-fun i_13_0 () Real [-10000, 10000])
(declare-fun i_13_t () Real [-10000, 10000])
(declare-fun voltage_13_0 () Real [-10000, 10000])
(declare-fun voltage_13_t () Real [-10000, 10000])
(declare-fun lt_13_0 () Real [0.000000, 0.02])
(declare-fun lt_13_t () Real [0.000000, 0.02])
(declare-fun gt_13_0 () Real [0.000000, 3])
(declare-fun gt_13_t () Real [0.000000, 3])
(declare-fun time_13 () Real [0.000000, 0.02])
(declare-fun mode_13 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_12 () Real [0.1, 0.5])
(declare-fun .add3_14 () Real [-10000, 10000] )
(declare-fun pid_op.0_14 () Real [-10000, 10000] )
(declare-fun state_angVal_14 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_14 () Real [-10000, 10000] )
(declare-fun next_voltage_14 () Real [-10000, 10000] )
(declare-fun angVal_14_0 () Real [-10000, 10000])
(declare-fun angVal_14_t () Real [-10000, 10000])
(declare-fun i_14_0 () Real [-10000, 10000])
(declare-fun i_14_t () Real [-10000, 10000])
(declare-fun voltage_14_0 () Real [-10000, 10000])
(declare-fun voltage_14_t () Real [-10000, 10000])
(declare-fun lt_14_0 () Real [0.000000, 0.02])
(declare-fun lt_14_t () Real [0.000000, 0.02])
(declare-fun gt_14_0 () Real [0.000000, 3])
(declare-fun gt_14_t () Real [0.000000, 3])
(declare-fun time_14 () Real [0.000000, 0.02])
(declare-fun mode_14 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_13 () Real [0.1, 0.5])
(declare-fun .add3_15 () Real [-10000, 10000] )
(declare-fun pid_op.0_15 () Real [-10000, 10000] )
(declare-fun state_angVal_15 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_15 () Real [-10000, 10000] )
(declare-fun next_voltage_15 () Real [-10000, 10000] )
(declare-fun angVal_15_0 () Real [-10000, 10000])
(declare-fun angVal_15_t () Real [-10000, 10000])
(declare-fun i_15_0 () Real [-10000, 10000])
(declare-fun i_15_t () Real [-10000, 10000])
(declare-fun voltage_15_0 () Real [-10000, 10000])
(declare-fun voltage_15_t () Real [-10000, 10000])
(declare-fun lt_15_0 () Real [0.000000, 0.02])
(declare-fun lt_15_t () Real [0.000000, 0.02])
(declare-fun gt_15_0 () Real [0.000000, 3])
(declare-fun gt_15_t () Real [0.000000, 3])
(declare-fun time_15 () Real [0.000000, 0.02])
(declare-fun mode_15 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_14 () Real [0.1, 0.5])
(declare-fun .add3_16 () Real [-10000, 10000] )
(declare-fun pid_op.0_16 () Real [-10000, 10000] )
(declare-fun state_angVal_16 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_16 () Real [-10000, 10000] )
(declare-fun next_voltage_16 () Real [-10000, 10000] )
(declare-fun angVal_16_0 () Real [-10000, 10000])
(declare-fun angVal_16_t () Real [-10000, 10000])
(declare-fun i_16_0 () Real [-10000, 10000])
(declare-fun i_16_t () Real [-10000, 10000])
(declare-fun voltage_16_0 () Real [-10000, 10000])
(declare-fun voltage_16_t () Real [-10000, 10000])
(declare-fun lt_16_0 () Real [0.000000, 0.02])
(declare-fun lt_16_t () Real [0.000000, 0.02])
(declare-fun gt_16_0 () Real [0.000000, 3])
(declare-fun gt_16_t () Real [0.000000, 3])
(declare-fun time_16 () Real [0.000000, 0.02])
(declare-fun mode_16 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_15 () Real [0.1, 0.5])
(declare-fun .add3_17 () Real [-10000, 10000] )
(declare-fun pid_op.0_17 () Real [-10000, 10000] )
(declare-fun state_angVal_17 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_17 () Real [-10000, 10000] )
(declare-fun next_voltage_17 () Real [-10000, 10000] )
(declare-fun angVal_17_0 () Real [-10000, 10000])
(declare-fun angVal_17_t () Real [-10000, 10000])
(declare-fun i_17_0 () Real [-10000, 10000])
(declare-fun i_17_t () Real [-10000, 10000])
(declare-fun voltage_17_0 () Real [-10000, 10000])
(declare-fun voltage_17_t () Real [-10000, 10000])
(declare-fun lt_17_0 () Real [0.000000, 0.02])
(declare-fun lt_17_t () Real [0.000000, 0.02])
(declare-fun gt_17_0 () Real [0.000000, 3])
(declare-fun gt_17_t () Real [0.000000, 3])
(declare-fun time_17 () Real [0.000000, 0.02])
(declare-fun mode_17 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_16 () Real [0.1, 0.5])
(declare-fun .add3_18 () Real [-10000, 10000] )
(declare-fun pid_op.0_18 () Real [-10000, 10000] )
(declare-fun state_angVal_18 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_18 () Real [-10000, 10000] )
(declare-fun next_voltage_18 () Real [-10000, 10000] )
(declare-fun angVal_18_0 () Real [-10000, 10000])
(declare-fun angVal_18_t () Real [-10000, 10000])
(declare-fun i_18_0 () Real [-10000, 10000])
(declare-fun i_18_t () Real [-10000, 10000])
(declare-fun voltage_18_0 () Real [-10000, 10000])
(declare-fun voltage_18_t () Real [-10000, 10000])
(declare-fun lt_18_0 () Real [0.000000, 0.02])
(declare-fun lt_18_t () Real [0.000000, 0.02])
(declare-fun gt_18_0 () Real [0.000000, 3])
(declare-fun gt_18_t () Real [0.000000, 3])
(declare-fun time_18 () Real [0.000000, 0.02])
(declare-fun mode_18 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_17 () Real [0.1, 0.5])
(declare-fun .add3_19 () Real [-10000, 10000] )
(declare-fun pid_op.0_19 () Real [-10000, 10000] )
(declare-fun state_angVal_19 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_19 () Real [-10000, 10000] )
(declare-fun next_voltage_19 () Real [-10000, 10000] )
(declare-fun angVal_19_0 () Real [-10000, 10000])
(declare-fun angVal_19_t () Real [-10000, 10000])
(declare-fun i_19_0 () Real [-10000, 10000])
(declare-fun i_19_t () Real [-10000, 10000])
(declare-fun voltage_19_0 () Real [-10000, 10000])
(declare-fun voltage_19_t () Real [-10000, 10000])
(declare-fun lt_19_0 () Real [0.000000, 0.02])
(declare-fun lt_19_t () Real [0.000000, 0.02])
(declare-fun gt_19_0 () Real [0.000000, 3])
(declare-fun gt_19_t () Real [0.000000, 3])
(declare-fun time_19 () Real [0.000000, 0.02])
(declare-fun mode_19 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_18 () Real [0.1, 0.5])
(declare-fun .add3_20 () Real [-10000, 10000] )
(declare-fun pid_op.0_20 () Real [-10000, 10000] )
(declare-fun state_angVal_20 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_20 () Real [-10000, 10000] )
(declare-fun next_voltage_20 () Real [-10000, 10000] )
(declare-fun angVal_20_0 () Real [-10000, 10000])
(declare-fun angVal_20_t () Real [-10000, 10000])
(declare-fun i_20_0 () Real [-10000, 10000])
(declare-fun i_20_t () Real [-10000, 10000])
(declare-fun voltage_20_0 () Real [-10000, 10000])
(declare-fun voltage_20_t () Real [-10000, 10000])
(declare-fun lt_20_0 () Real [0.000000, 0.02])
(declare-fun lt_20_t () Real [0.000000, 0.02])
(declare-fun gt_20_0 () Real [0.000000, 3])
(declare-fun gt_20_t () Real [0.000000, 3])
(declare-fun time_20 () Real [0.000000, 0.02])
(declare-fun mode_20 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_19 () Real [0.1, 0.5])
(declare-fun .add3_21 () Real [-10000, 10000] )
(declare-fun pid_op.0_21 () Real [-10000, 10000] )
(declare-fun state_angVal_21 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_21 () Real [-10000, 10000] )
(declare-fun next_voltage_21 () Real [-10000, 10000] )
(declare-fun angVal_21_0 () Real [-10000, 10000])
(declare-fun angVal_21_t () Real [-10000, 10000])
(declare-fun i_21_0 () Real [-10000, 10000])
(declare-fun i_21_t () Real [-10000, 10000])
(declare-fun voltage_21_0 () Real [-10000, 10000])
(declare-fun voltage_21_t () Real [-10000, 10000])
(declare-fun lt_21_0 () Real [0.000000, 0.02])
(declare-fun lt_21_t () Real [0.000000, 0.02])
(declare-fun gt_21_0 () Real [0.000000, 3])
(declare-fun gt_21_t () Real [0.000000, 3])
(declare-fun time_21 () Real [0.000000, 0.02])
(declare-fun mode_21 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_20 () Real [0.1, 0.5])
(declare-fun .add3_22 () Real [-10000, 10000] )
(declare-fun pid_op.0_22 () Real [-10000, 10000] )
(declare-fun state_angVal_22 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_22 () Real [-10000, 10000] )
(declare-fun next_voltage_22 () Real [-10000, 10000] )
(declare-fun angVal_22_0 () Real [-10000, 10000])
(declare-fun angVal_22_t () Real [-10000, 10000])
(declare-fun i_22_0 () Real [-10000, 10000])
(declare-fun i_22_t () Real [-10000, 10000])
(declare-fun voltage_22_0 () Real [-10000, 10000])
(declare-fun voltage_22_t () Real [-10000, 10000])
(declare-fun lt_22_0 () Real [0.000000, 0.02])
(declare-fun lt_22_t () Real [0.000000, 0.02])
(declare-fun gt_22_0 () Real [0.000000, 3])
(declare-fun gt_22_t () Real [0.000000, 3])
(declare-fun time_22 () Real [0.000000, 0.02])
(declare-fun mode_22 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_21 () Real [0.1, 0.5])
(declare-fun .add3_23 () Real [-10000, 10000] )
(declare-fun pid_op.0_23 () Real [-10000, 10000] )
(declare-fun state_angVal_23 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_23 () Real [-10000, 10000] )
(declare-fun next_voltage_23 () Real [-10000, 10000] )
(declare-fun angVal_23_0 () Real [-10000, 10000])
(declare-fun angVal_23_t () Real [-10000, 10000])
(declare-fun i_23_0 () Real [-10000, 10000])
(declare-fun i_23_t () Real [-10000, 10000])
(declare-fun voltage_23_0 () Real [-10000, 10000])
(declare-fun voltage_23_t () Real [-10000, 10000])
(declare-fun lt_23_0 () Real [0.000000, 0.02])
(declare-fun lt_23_t () Real [0.000000, 0.02])
(declare-fun gt_23_0 () Real [0.000000, 3])
(declare-fun gt_23_t () Real [0.000000, 3])
(declare-fun time_23 () Real [0.000000, 0.02])
(declare-fun mode_23 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_22 () Real [0.1, 0.5])
(declare-fun .add3_24 () Real [-10000, 10000] )
(declare-fun pid_op.0_24 () Real [-10000, 10000] )
(declare-fun state_angVal_24 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_24 () Real [-10000, 10000] )
(declare-fun next_voltage_24 () Real [-10000, 10000] )
(declare-fun angVal_24_0 () Real [-10000, 10000])
(declare-fun angVal_24_t () Real [-10000, 10000])
(declare-fun i_24_0 () Real [-10000, 10000])
(declare-fun i_24_t () Real [-10000, 10000])
(declare-fun voltage_24_0 () Real [-10000, 10000])
(declare-fun voltage_24_t () Real [-10000, 10000])
(declare-fun lt_24_0 () Real [0.000000, 0.02])
(declare-fun lt_24_t () Real [0.000000, 0.02])
(declare-fun gt_24_0 () Real [0.000000, 3])
(declare-fun gt_24_t () Real [0.000000, 3])
(declare-fun time_24 () Real [0.000000, 0.02])
(declare-fun mode_24 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_23 () Real [0.1, 0.5])
(declare-fun .add3_25 () Real [-10000, 10000] )
(declare-fun pid_op.0_25 () Real [-10000, 10000] )
(declare-fun state_angVal_25 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_25 () Real [-10000, 10000] )
(declare-fun next_voltage_25 () Real [-10000, 10000] )
(declare-fun angVal_25_0 () Real [-10000, 10000])
(declare-fun angVal_25_t () Real [-10000, 10000])
(declare-fun i_25_0 () Real [-10000, 10000])
(declare-fun i_25_t () Real [-10000, 10000])
(declare-fun voltage_25_0 () Real [-10000, 10000])
(declare-fun voltage_25_t () Real [-10000, 10000])
(declare-fun lt_25_0 () Real [0.000000, 0.02])
(declare-fun lt_25_t () Real [0.000000, 0.02])
(declare-fun gt_25_0 () Real [0.000000, 3])
(declare-fun gt_25_t () Real [0.000000, 3])
(declare-fun time_25 () Real [0.000000, 0.02])
(declare-fun mode_25 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_24 () Real [0.1, 0.5])
(declare-fun .add3_26 () Real [-10000, 10000] )
(declare-fun pid_op.0_26 () Real [-10000, 10000] )
(declare-fun state_angVal_26 () Real [-10000, 10000] )
(declare-fun state_error_i_previous_26 () Real [-10000, 10000] )
(declare-fun next_voltage_26 () Real [-10000, 10000] )
(declare-fun angVal_26_0 () Real [-10000, 10000])
(declare-fun angVal_26_t () Real [-10000, 10000])
(declare-fun i_26_0 () Real [-10000, 10000])
(declare-fun i_26_t () Real [-10000, 10000])
(declare-fun voltage_26_0 () Real [-10000, 10000])
(declare-fun voltage_26_t () Real [-10000, 10000])
(declare-fun lt_26_0 () Real [0.000000, 0.02])
(declare-fun lt_26_t () Real [0.000000, 0.02])
(declare-fun gt_26_0 () Real [0.000000, 3])
(declare-fun gt_26_t () Real [0.000000, 3])
(declare-fun time_26 () Real [0.000000, 0.02])
(declare-fun mode_26 () Real [1.000000, 1.000000])
(declare-fun Noise_angVal_25 () Real [0.1, 0.5])
(define-ode flow_1 ((= d/dt[gt] 1) (= d/dt[lt] 1) (= d/dt[angVal] (+(*(/(- 0.1) 0.01) angVal)(*(/ 0.01 0.01) i))) (= d/dt[i] (+(-(*(/ 0.01 0.5) angVal)(*(/ 1 0.5) i))(/ voltage 0.5))) (= d/dt[voltage] 0)))
(assert (and (= lt_0_0 0) (= gt_0_0 0) (= voltage_0_0 1.0 )(= i_0_0 0 )(= angVal_0_0 0 )(= mode_0 1) (= state_error_i_previous_0 0 )  
 (= lt_0_t (+ lt_0_0 (* 1 0))) (= gt_0_t (+ gt_0_0 (* 1 0))) (= voltage_0_t (+ voltage_0_0 (* 0 0))) 
 (= [gt_0_t lt_0_t angVal_0_t i_0_t voltage_0_t ] (integral 0. time_0 [gt_0_0 lt_0_0 angVal_0_0 i_0_0 voltage_0_0 ] flow_1))  
 (= mode_1 1) (= lt_0_t 0) (= gt_1_0 gt_0_t) (= lt_1_0 0)  
 (= angVal_1_0 (+ angVal_0_t Noise_angVal_0 ) )(= i_1_0 i_0_t)(= state_angVal_0 angVal_0_t )  
 (ite (< (+ (* (- 1 state_angVal_0 ) 40 ) (+ (- 1 state_angVal_0 ) state_error_i_previous_0 ) ) -20 ) (= .add3_0 -20 )(= .add3_0 (+ (* (- 1 state_angVal_0 ) 40 ) (+ (- 1 state_angVal_0 ) state_error_i_previous_0 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_0 ) 40 ) (+ (- 1 state_angVal_0 ) state_error_i_previous_0 ) ) 20 ) (= pid_op.0_0 20 )(= pid_op.0_0 .add3_0 ) ) 
(= next_voltage_1 pid_op.0_0 ) 
(= state_error_i_previous_1 (+ (- 1 state_angVal_0 ) state_error_i_previous_0 ) ) 
  
 (= next_voltage_1 voltage_1_0 )  
 (= lt_1_t (+ lt_1_0 (* 1 time_1 ))) (= gt_1_t (+ gt_1_0 (* 1 time_1 ))) (= voltage_1_t (+ voltage_1_0 (* 0 time_1 ))) 
 (= [gt_1_t lt_1_t angVal_1_t i_1_t voltage_1_t ] (integral 0. time_1 [gt_1_0 lt_1_0 angVal_1_0 i_1_0 voltage_1_0 ] flow_1))  
 (<= lt_1_t 0.02) (<= lt_1_0 0.02) (= mode_2 1)  
 (= mode_2 1) (<= lt_1_t 0.02) (= gt_2_0 gt_1_t) (= lt_2_0 0)  
 (= angVal_2_0 (+ angVal_1_t Noise_angVal_1 ) )(= i_2_0 i_1_t)(= state_angVal_1 angVal_1_t )  
 (ite (< (+ (* (- 1 state_angVal_1 ) 40 ) (+ (- 1 state_angVal_1 ) state_error_i_previous_1 ) ) -20 ) (= .add3_1 -20 )(= .add3_1 (+ (* (- 1 state_angVal_1 ) 40 ) (+ (- 1 state_angVal_1 ) state_error_i_previous_1 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_1 ) 40 ) (+ (- 1 state_angVal_1 ) state_error_i_previous_1 ) ) 20 ) (= pid_op.0_1 20 )(= pid_op.0_1 .add3_1 ) ) 
(= next_voltage_2 pid_op.0_1 ) 
(= state_error_i_previous_2 (+ (- 1 state_angVal_1 ) state_error_i_previous_1 ) ) 
  
 (= next_voltage_2 voltage_2_0 )  
 (= lt_2_t (+ lt_2_0 (* 1 time_2 ))) (= gt_2_t (+ gt_2_0 (* 1 time_2 ))) (= voltage_2_t (+ voltage_2_0 (* 0 time_2 ))) 
 (= [gt_2_t lt_2_t angVal_2_t i_2_t voltage_2_t ] (integral 0. time_2 [gt_2_0 lt_2_0 angVal_2_0 i_2_0 voltage_2_0 ] flow_1))  
 (<= lt_2_t 0.02) (<= lt_2_0 0.02) (= mode_3 1)  
 (= mode_3 1) (<= lt_2_t 0.02) (= gt_3_0 gt_2_t) (= lt_3_0 0)  
 (= angVal_3_0 (+ angVal_2_t Noise_angVal_2 ) )(= i_3_0 i_2_t)(= state_angVal_2 angVal_2_t )  
 (ite (< (+ (* (- 1 state_angVal_2 ) 40 ) (+ (- 1 state_angVal_2 ) state_error_i_previous_2 ) ) -20 ) (= .add3_2 -20 )(= .add3_2 (+ (* (- 1 state_angVal_2 ) 40 ) (+ (- 1 state_angVal_2 ) state_error_i_previous_2 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_2 ) 40 ) (+ (- 1 state_angVal_2 ) state_error_i_previous_2 ) ) 20 ) (= pid_op.0_2 20 )(= pid_op.0_2 .add3_2 ) ) 
(= next_voltage_3 pid_op.0_2 ) 
(= state_error_i_previous_3 (+ (- 1 state_angVal_2 ) state_error_i_previous_2 ) ) 
  
 (= next_voltage_3 voltage_3_0 )  
 (= lt_3_t (+ lt_3_0 (* 1 time_3 ))) (= gt_3_t (+ gt_3_0 (* 1 time_3 ))) (= voltage_3_t (+ voltage_3_0 (* 0 time_3 ))) 
 (= [gt_3_t lt_3_t angVal_3_t i_3_t voltage_3_t ] (integral 0. time_3 [gt_3_0 lt_3_0 angVal_3_0 i_3_0 voltage_3_0 ] flow_1))  
 (<= lt_3_t 0.02) (<= lt_3_0 0.02) (= mode_4 1)  
 (= mode_4 1) (<= lt_3_t 0.02) (= gt_4_0 gt_3_t) (= lt_4_0 0)  
 (= angVal_4_0 (+ angVal_3_t Noise_angVal_3 ) )(= i_4_0 i_3_t)(= state_angVal_3 angVal_3_t )  
 (ite (< (+ (* (- 1 state_angVal_3 ) 40 ) (+ (- 1 state_angVal_3 ) state_error_i_previous_3 ) ) -20 ) (= .add3_3 -20 )(= .add3_3 (+ (* (- 1 state_angVal_3 ) 40 ) (+ (- 1 state_angVal_3 ) state_error_i_previous_3 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_3 ) 40 ) (+ (- 1 state_angVal_3 ) state_error_i_previous_3 ) ) 20 ) (= pid_op.0_3 20 )(= pid_op.0_3 .add3_3 ) ) 
(= next_voltage_4 pid_op.0_3 ) 
(= state_error_i_previous_4 (+ (- 1 state_angVal_3 ) state_error_i_previous_3 ) ) 
  
 (= next_voltage_4 voltage_4_0 )  
 (= lt_4_t (+ lt_4_0 (* 1 time_4 ))) (= gt_4_t (+ gt_4_0 (* 1 time_4 ))) (= voltage_4_t (+ voltage_4_0 (* 0 time_4 ))) 
 (= [gt_4_t lt_4_t angVal_4_t i_4_t voltage_4_t ] (integral 0. time_4 [gt_4_0 lt_4_0 angVal_4_0 i_4_0 voltage_4_0 ] flow_1))  
 (<= lt_4_t 0.02) (<= lt_4_0 0.02) (= mode_5 1)  
 (= mode_5 1) (<= lt_4_t 0.02) (= gt_5_0 gt_4_t) (= lt_5_0 0)  
 (= angVal_5_0 (+ angVal_4_t Noise_angVal_4 ) )(= i_5_0 i_4_t)(= state_angVal_4 angVal_4_t )  
 (ite (< (+ (* (- 1 state_angVal_4 ) 40 ) (+ (- 1 state_angVal_4 ) state_error_i_previous_4 ) ) -20 ) (= .add3_4 -20 )(= .add3_4 (+ (* (- 1 state_angVal_4 ) 40 ) (+ (- 1 state_angVal_4 ) state_error_i_previous_4 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_4 ) 40 ) (+ (- 1 state_angVal_4 ) state_error_i_previous_4 ) ) 20 ) (= pid_op.0_4 20 )(= pid_op.0_4 .add3_4 ) ) 
(= next_voltage_5 pid_op.0_4 ) 
(= state_error_i_previous_5 (+ (- 1 state_angVal_4 ) state_error_i_previous_4 ) ) 
  
 (= next_voltage_5 voltage_5_0 )  
 (= lt_5_t (+ lt_5_0 (* 1 time_5 ))) (= gt_5_t (+ gt_5_0 (* 1 time_5 ))) (= voltage_5_t (+ voltage_5_0 (* 0 time_5 ))) 
 (= [gt_5_t lt_5_t angVal_5_t i_5_t voltage_5_t ] (integral 0. time_5 [gt_5_0 lt_5_0 angVal_5_0 i_5_0 voltage_5_0 ] flow_1))  
 (<= lt_5_t 0.02) (<= lt_5_0 0.02) (= mode_6 1)  
 (= mode_6 1) (<= lt_5_t 0.02) (= gt_6_0 gt_5_t) (= lt_6_0 0)  
 (= angVal_6_0 (+ angVal_5_t Noise_angVal_5 ) )(= i_6_0 i_5_t)(= state_angVal_5 angVal_5_t )  
 (ite (< (+ (* (- 1 state_angVal_5 ) 40 ) (+ (- 1 state_angVal_5 ) state_error_i_previous_5 ) ) -20 ) (= .add3_5 -20 )(= .add3_5 (+ (* (- 1 state_angVal_5 ) 40 ) (+ (- 1 state_angVal_5 ) state_error_i_previous_5 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_5 ) 40 ) (+ (- 1 state_angVal_5 ) state_error_i_previous_5 ) ) 20 ) (= pid_op.0_5 20 )(= pid_op.0_5 .add3_5 ) ) 
(= next_voltage_6 pid_op.0_5 ) 
(= state_error_i_previous_6 (+ (- 1 state_angVal_5 ) state_error_i_previous_5 ) ) 
  
 (= next_voltage_6 voltage_6_0 )  
 (= lt_6_t (+ lt_6_0 (* 1 time_6 ))) (= gt_6_t (+ gt_6_0 (* 1 time_6 ))) (= voltage_6_t (+ voltage_6_0 (* 0 time_6 ))) 
 (= [gt_6_t lt_6_t angVal_6_t i_6_t voltage_6_t ] (integral 0. time_6 [gt_6_0 lt_6_0 angVal_6_0 i_6_0 voltage_6_0 ] flow_1))  
 (<= lt_6_t 0.02) (<= lt_6_0 0.02) (= mode_7 1)  
 (= mode_7 1) (<= lt_6_t 0.02) (= gt_7_0 gt_6_t) (= lt_7_0 0)  
 (= angVal_7_0 (+ angVal_6_t Noise_angVal_6 ) )(= i_7_0 i_6_t)(= state_angVal_6 angVal_6_t )  
 (ite (< (+ (* (- 1 state_angVal_6 ) 40 ) (+ (- 1 state_angVal_6 ) state_error_i_previous_6 ) ) -20 ) (= .add3_6 -20 )(= .add3_6 (+ (* (- 1 state_angVal_6 ) 40 ) (+ (- 1 state_angVal_6 ) state_error_i_previous_6 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_6 ) 40 ) (+ (- 1 state_angVal_6 ) state_error_i_previous_6 ) ) 20 ) (= pid_op.0_6 20 )(= pid_op.0_6 .add3_6 ) ) 
(= next_voltage_7 pid_op.0_6 ) 
(= state_error_i_previous_7 (+ (- 1 state_angVal_6 ) state_error_i_previous_6 ) ) 
  
 (= next_voltage_7 voltage_7_0 )  
 (= lt_7_t (+ lt_7_0 (* 1 time_7 ))) (= gt_7_t (+ gt_7_0 (* 1 time_7 ))) (= voltage_7_t (+ voltage_7_0 (* 0 time_7 ))) 
 (= [gt_7_t lt_7_t angVal_7_t i_7_t voltage_7_t ] (integral 0. time_7 [gt_7_0 lt_7_0 angVal_7_0 i_7_0 voltage_7_0 ] flow_1))  
 (<= lt_7_t 0.02) (<= lt_7_0 0.02) (= mode_8 1)  
 (= mode_8 1) (<= lt_7_t 0.02) (= gt_8_0 gt_7_t) (= lt_8_0 0)  
 (= angVal_8_0 (+ angVal_7_t Noise_angVal_7 ) )(= i_8_0 i_7_t)(= state_angVal_7 angVal_7_t )  
 (ite (< (+ (* (- 1 state_angVal_7 ) 40 ) (+ (- 1 state_angVal_7 ) state_error_i_previous_7 ) ) -20 ) (= .add3_7 -20 )(= .add3_7 (+ (* (- 1 state_angVal_7 ) 40 ) (+ (- 1 state_angVal_7 ) state_error_i_previous_7 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_7 ) 40 ) (+ (- 1 state_angVal_7 ) state_error_i_previous_7 ) ) 20 ) (= pid_op.0_7 20 )(= pid_op.0_7 .add3_7 ) ) 
(= next_voltage_8 pid_op.0_7 ) 
(= state_error_i_previous_8 (+ (- 1 state_angVal_7 ) state_error_i_previous_7 ) ) 
  
 (= next_voltage_8 voltage_8_0 )  
 (= lt_8_t (+ lt_8_0 (* 1 time_8 ))) (= gt_8_t (+ gt_8_0 (* 1 time_8 ))) (= voltage_8_t (+ voltage_8_0 (* 0 time_8 ))) 
 (= [gt_8_t lt_8_t angVal_8_t i_8_t voltage_8_t ] (integral 0. time_8 [gt_8_0 lt_8_0 angVal_8_0 i_8_0 voltage_8_0 ] flow_1))  
 (<= lt_8_t 0.02) (<= lt_8_0 0.02) (= mode_9 1)  
 (= mode_9 1) (<= lt_8_t 0.02) (= gt_9_0 gt_8_t) (= lt_9_0 0)  
 (= angVal_9_0 (+ angVal_8_t Noise_angVal_8 ) )(= i_9_0 i_8_t)(= state_angVal_8 angVal_8_t )  
 (ite (< (+ (* (- 1 state_angVal_8 ) 40 ) (+ (- 1 state_angVal_8 ) state_error_i_previous_8 ) ) -20 ) (= .add3_8 -20 )(= .add3_8 (+ (* (- 1 state_angVal_8 ) 40 ) (+ (- 1 state_angVal_8 ) state_error_i_previous_8 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_8 ) 40 ) (+ (- 1 state_angVal_8 ) state_error_i_previous_8 ) ) 20 ) (= pid_op.0_8 20 )(= pid_op.0_8 .add3_8 ) ) 
(= next_voltage_9 pid_op.0_8 ) 
(= state_error_i_previous_9 (+ (- 1 state_angVal_8 ) state_error_i_previous_8 ) ) 
  
 (= next_voltage_9 voltage_9_0 )  
 (= lt_9_t (+ lt_9_0 (* 1 time_9 ))) (= gt_9_t (+ gt_9_0 (* 1 time_9 ))) (= voltage_9_t (+ voltage_9_0 (* 0 time_9 ))) 
 (= [gt_9_t lt_9_t angVal_9_t i_9_t voltage_9_t ] (integral 0. time_9 [gt_9_0 lt_9_0 angVal_9_0 i_9_0 voltage_9_0 ] flow_1))  
 (<= lt_9_t 0.02) (<= lt_9_0 0.02) (= mode_10 1)  
 (= mode_10 1) (<= lt_9_t 0.02) (= gt_10_0 gt_9_t) (= lt_10_0 0)  
 (= angVal_10_0 (+ angVal_9_t Noise_angVal_9 ) )(= i_10_0 i_9_t)(= state_angVal_9 angVal_9_t )  
 (ite (< (+ (* (- 1 state_angVal_9 ) 40 ) (+ (- 1 state_angVal_9 ) state_error_i_previous_9 ) ) -20 ) (= .add3_9 -20 )(= .add3_9 (+ (* (- 1 state_angVal_9 ) 40 ) (+ (- 1 state_angVal_9 ) state_error_i_previous_9 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_9 ) 40 ) (+ (- 1 state_angVal_9 ) state_error_i_previous_9 ) ) 20 ) (= pid_op.0_9 20 )(= pid_op.0_9 .add3_9 ) ) 
(= next_voltage_10 pid_op.0_9 ) 
(= state_error_i_previous_10 (+ (- 1 state_angVal_9 ) state_error_i_previous_9 ) ) 
  
 (= next_voltage_10 voltage_10_0 )  
 (= lt_10_t (+ lt_10_0 (* 1 time_10 ))) (= gt_10_t (+ gt_10_0 (* 1 time_10 ))) (= voltage_10_t (+ voltage_10_0 (* 0 time_10 ))) 
 (= [gt_10_t lt_10_t angVal_10_t i_10_t voltage_10_t ] (integral 0. time_10 [gt_10_0 lt_10_0 angVal_10_0 i_10_0 voltage_10_0 ] flow_1))  
 (<= lt_10_t 0.02) (<= lt_10_0 0.02) (= mode_11 1)  
 (= mode_11 1) (<= lt_10_t 0.02) (= gt_11_0 gt_10_t) (= lt_11_0 0)  
 (= angVal_11_0 (+ angVal_10_t Noise_angVal_10 ) )(= i_11_0 i_10_t)(= state_angVal_10 angVal_10_t )  
 (ite (< (+ (* (- 1 state_angVal_10 ) 40 ) (+ (- 1 state_angVal_10 ) state_error_i_previous_10 ) ) -20 ) (= .add3_10 -20 )(= .add3_10 (+ (* (- 1 state_angVal_10 ) 40 ) (+ (- 1 state_angVal_10 ) state_error_i_previous_10 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_10 ) 40 ) (+ (- 1 state_angVal_10 ) state_error_i_previous_10 ) ) 20 ) (= pid_op.0_10 20 )(= pid_op.0_10 .add3_10 ) ) 
(= next_voltage_11 pid_op.0_10 ) 
(= state_error_i_previous_11 (+ (- 1 state_angVal_10 ) state_error_i_previous_10 ) ) 
  
 (= next_voltage_11 voltage_11_0 )  
 (= lt_11_t (+ lt_11_0 (* 1 time_11 ))) (= gt_11_t (+ gt_11_0 (* 1 time_11 ))) (= voltage_11_t (+ voltage_11_0 (* 0 time_11 ))) 
 (= [gt_11_t lt_11_t angVal_11_t i_11_t voltage_11_t ] (integral 0. time_11 [gt_11_0 lt_11_0 angVal_11_0 i_11_0 voltage_11_0 ] flow_1))  
 (<= lt_11_t 0.02) (<= lt_11_0 0.02) (= mode_12 1)  
 (= mode_12 1) (<= lt_11_t 0.02) (= gt_12_0 gt_11_t) (= lt_12_0 0)  
 (= angVal_12_0 (+ angVal_11_t Noise_angVal_11 ) )(= i_12_0 i_11_t)(= state_angVal_11 angVal_11_t )  
 (ite (< (+ (* (- 1 state_angVal_11 ) 40 ) (+ (- 1 state_angVal_11 ) state_error_i_previous_11 ) ) -20 ) (= .add3_11 -20 )(= .add3_11 (+ (* (- 1 state_angVal_11 ) 40 ) (+ (- 1 state_angVal_11 ) state_error_i_previous_11 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_11 ) 40 ) (+ (- 1 state_angVal_11 ) state_error_i_previous_11 ) ) 20 ) (= pid_op.0_11 20 )(= pid_op.0_11 .add3_11 ) ) 
(= next_voltage_12 pid_op.0_11 ) 
(= state_error_i_previous_12 (+ (- 1 state_angVal_11 ) state_error_i_previous_11 ) ) 
  
 (= next_voltage_12 voltage_12_0 )  
 (= lt_12_t (+ lt_12_0 (* 1 time_12 ))) (= gt_12_t (+ gt_12_0 (* 1 time_12 ))) (= voltage_12_t (+ voltage_12_0 (* 0 time_12 ))) 
 (= [gt_12_t lt_12_t angVal_12_t i_12_t voltage_12_t ] (integral 0. time_12 [gt_12_0 lt_12_0 angVal_12_0 i_12_0 voltage_12_0 ] flow_1))  
 (<= lt_12_t 0.02) (<= lt_12_0 0.02) (= mode_13 1)  
 (= mode_13 1) (<= lt_12_t 0.02) (= gt_13_0 gt_12_t) (= lt_13_0 0)  
 (= angVal_13_0 (+ angVal_12_t Noise_angVal_12 ) )(= i_13_0 i_12_t)(= state_angVal_12 angVal_12_t )  
 (ite (< (+ (* (- 1 state_angVal_12 ) 40 ) (+ (- 1 state_angVal_12 ) state_error_i_previous_12 ) ) -20 ) (= .add3_12 -20 )(= .add3_12 (+ (* (- 1 state_angVal_12 ) 40 ) (+ (- 1 state_angVal_12 ) state_error_i_previous_12 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_12 ) 40 ) (+ (- 1 state_angVal_12 ) state_error_i_previous_12 ) ) 20 ) (= pid_op.0_12 20 )(= pid_op.0_12 .add3_12 ) ) 
(= next_voltage_13 pid_op.0_12 ) 
(= state_error_i_previous_13 (+ (- 1 state_angVal_12 ) state_error_i_previous_12 ) ) 
  
 (= next_voltage_13 voltage_13_0 )  
 (= lt_13_t (+ lt_13_0 (* 1 time_13 ))) (= gt_13_t (+ gt_13_0 (* 1 time_13 ))) (= voltage_13_t (+ voltage_13_0 (* 0 time_13 ))) 
 (= [gt_13_t lt_13_t angVal_13_t i_13_t voltage_13_t ] (integral 0. time_13 [gt_13_0 lt_13_0 angVal_13_0 i_13_0 voltage_13_0 ] flow_1))  
 (<= lt_13_t 0.02) (<= lt_13_0 0.02) (= mode_14 1)  
 (= mode_14 1) (<= lt_13_t 0.02) (= gt_14_0 gt_13_t) (= lt_14_0 0)  
 (= angVal_14_0 (+ angVal_13_t Noise_angVal_13 ) )(= i_14_0 i_13_t)(= state_angVal_13 angVal_13_t )  
 (ite (< (+ (* (- 1 state_angVal_13 ) 40 ) (+ (- 1 state_angVal_13 ) state_error_i_previous_13 ) ) -20 ) (= .add3_13 -20 )(= .add3_13 (+ (* (- 1 state_angVal_13 ) 40 ) (+ (- 1 state_angVal_13 ) state_error_i_previous_13 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_13 ) 40 ) (+ (- 1 state_angVal_13 ) state_error_i_previous_13 ) ) 20 ) (= pid_op.0_13 20 )(= pid_op.0_13 .add3_13 ) ) 
(= next_voltage_14 pid_op.0_13 ) 
(= state_error_i_previous_14 (+ (- 1 state_angVal_13 ) state_error_i_previous_13 ) ) 
  
 (= next_voltage_14 voltage_14_0 )  
 (= lt_14_t (+ lt_14_0 (* 1 time_14 ))) (= gt_14_t (+ gt_14_0 (* 1 time_14 ))) (= voltage_14_t (+ voltage_14_0 (* 0 time_14 ))) 
 (= [gt_14_t lt_14_t angVal_14_t i_14_t voltage_14_t ] (integral 0. time_14 [gt_14_0 lt_14_0 angVal_14_0 i_14_0 voltage_14_0 ] flow_1))  
 (<= lt_14_t 0.02) (<= lt_14_0 0.02) (= mode_15 1)  
 (= mode_15 1) (<= lt_14_t 0.02) (= gt_15_0 gt_14_t) (= lt_15_0 0)  
 (= angVal_15_0 (+ angVal_14_t Noise_angVal_14 ) )(= i_15_0 i_14_t)(= state_angVal_14 angVal_14_t )  
 (ite (< (+ (* (- 1 state_angVal_14 ) 40 ) (+ (- 1 state_angVal_14 ) state_error_i_previous_14 ) ) -20 ) (= .add3_14 -20 )(= .add3_14 (+ (* (- 1 state_angVal_14 ) 40 ) (+ (- 1 state_angVal_14 ) state_error_i_previous_14 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_14 ) 40 ) (+ (- 1 state_angVal_14 ) state_error_i_previous_14 ) ) 20 ) (= pid_op.0_14 20 )(= pid_op.0_14 .add3_14 ) ) 
(= next_voltage_15 pid_op.0_14 ) 
(= state_error_i_previous_15 (+ (- 1 state_angVal_14 ) state_error_i_previous_14 ) ) 
  
 (= next_voltage_15 voltage_15_0 )  
 (= lt_15_t (+ lt_15_0 (* 1 time_15 ))) (= gt_15_t (+ gt_15_0 (* 1 time_15 ))) (= voltage_15_t (+ voltage_15_0 (* 0 time_15 ))) 
 (= [gt_15_t lt_15_t angVal_15_t i_15_t voltage_15_t ] (integral 0. time_15 [gt_15_0 lt_15_0 angVal_15_0 i_15_0 voltage_15_0 ] flow_1))  
 (<= lt_15_t 0.02) (<= lt_15_0 0.02) (= mode_16 1)  
 (= mode_16 1) (<= lt_15_t 0.02) (= gt_16_0 gt_15_t) (= lt_16_0 0)  
 (= angVal_16_0 (+ angVal_15_t Noise_angVal_15 ) )(= i_16_0 i_15_t)(= state_angVal_15 angVal_15_t )  
 (ite (< (+ (* (- 1 state_angVal_15 ) 40 ) (+ (- 1 state_angVal_15 ) state_error_i_previous_15 ) ) -20 ) (= .add3_15 -20 )(= .add3_15 (+ (* (- 1 state_angVal_15 ) 40 ) (+ (- 1 state_angVal_15 ) state_error_i_previous_15 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_15 ) 40 ) (+ (- 1 state_angVal_15 ) state_error_i_previous_15 ) ) 20 ) (= pid_op.0_15 20 )(= pid_op.0_15 .add3_15 ) ) 
(= next_voltage_16 pid_op.0_15 ) 
(= state_error_i_previous_16 (+ (- 1 state_angVal_15 ) state_error_i_previous_15 ) ) 
  
 (= next_voltage_16 voltage_16_0 )  
 (= lt_16_t (+ lt_16_0 (* 1 time_16 ))) (= gt_16_t (+ gt_16_0 (* 1 time_16 ))) (= voltage_16_t (+ voltage_16_0 (* 0 time_16 ))) 
 (= [gt_16_t lt_16_t angVal_16_t i_16_t voltage_16_t ] (integral 0. time_16 [gt_16_0 lt_16_0 angVal_16_0 i_16_0 voltage_16_0 ] flow_1))  
 (<= lt_16_t 0.02) (<= lt_16_0 0.02) (= mode_17 1)  
 (= mode_17 1) (<= lt_16_t 0.02) (= gt_17_0 gt_16_t) (= lt_17_0 0)  
 (= angVal_17_0 (+ angVal_16_t Noise_angVal_16 ) )(= i_17_0 i_16_t)(= state_angVal_16 angVal_16_t )  
 (ite (< (+ (* (- 1 state_angVal_16 ) 40 ) (+ (- 1 state_angVal_16 ) state_error_i_previous_16 ) ) -20 ) (= .add3_16 -20 )(= .add3_16 (+ (* (- 1 state_angVal_16 ) 40 ) (+ (- 1 state_angVal_16 ) state_error_i_previous_16 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_16 ) 40 ) (+ (- 1 state_angVal_16 ) state_error_i_previous_16 ) ) 20 ) (= pid_op.0_16 20 )(= pid_op.0_16 .add3_16 ) ) 
(= next_voltage_17 pid_op.0_16 ) 
(= state_error_i_previous_17 (+ (- 1 state_angVal_16 ) state_error_i_previous_16 ) ) 
  
 (= next_voltage_17 voltage_17_0 )  
 (= lt_17_t (+ lt_17_0 (* 1 time_17 ))) (= gt_17_t (+ gt_17_0 (* 1 time_17 ))) (= voltage_17_t (+ voltage_17_0 (* 0 time_17 ))) 
 (= [gt_17_t lt_17_t angVal_17_t i_17_t voltage_17_t ] (integral 0. time_17 [gt_17_0 lt_17_0 angVal_17_0 i_17_0 voltage_17_0 ] flow_1))  
 (<= lt_17_t 0.02) (<= lt_17_0 0.02) (= mode_18 1)  
 (= mode_18 1) (<= lt_17_t 0.02) (= gt_18_0 gt_17_t) (= lt_18_0 0)  
 (= angVal_18_0 (+ angVal_17_t Noise_angVal_17 ) )(= i_18_0 i_17_t)(= state_angVal_17 angVal_17_t )  
 (ite (< (+ (* (- 1 state_angVal_17 ) 40 ) (+ (- 1 state_angVal_17 ) state_error_i_previous_17 ) ) -20 ) (= .add3_17 -20 )(= .add3_17 (+ (* (- 1 state_angVal_17 ) 40 ) (+ (- 1 state_angVal_17 ) state_error_i_previous_17 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_17 ) 40 ) (+ (- 1 state_angVal_17 ) state_error_i_previous_17 ) ) 20 ) (= pid_op.0_17 20 )(= pid_op.0_17 .add3_17 ) ) 
(= next_voltage_18 pid_op.0_17 ) 
(= state_error_i_previous_18 (+ (- 1 state_angVal_17 ) state_error_i_previous_17 ) ) 
  
 (= next_voltage_18 voltage_18_0 )  
 (= lt_18_t (+ lt_18_0 (* 1 time_18 ))) (= gt_18_t (+ gt_18_0 (* 1 time_18 ))) (= voltage_18_t (+ voltage_18_0 (* 0 time_18 ))) 
 (= [gt_18_t lt_18_t angVal_18_t i_18_t voltage_18_t ] (integral 0. time_18 [gt_18_0 lt_18_0 angVal_18_0 i_18_0 voltage_18_0 ] flow_1))  
 (<= lt_18_t 0.02) (<= lt_18_0 0.02) (= mode_19 1)  
 (= mode_19 1) (<= lt_18_t 0.02) (= gt_19_0 gt_18_t) (= lt_19_0 0)  
 (= angVal_19_0 (+ angVal_18_t Noise_angVal_18 ) )(= i_19_0 i_18_t)(= state_angVal_18 angVal_18_t )  
 (ite (< (+ (* (- 1 state_angVal_18 ) 40 ) (+ (- 1 state_angVal_18 ) state_error_i_previous_18 ) ) -20 ) (= .add3_18 -20 )(= .add3_18 (+ (* (- 1 state_angVal_18 ) 40 ) (+ (- 1 state_angVal_18 ) state_error_i_previous_18 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_18 ) 40 ) (+ (- 1 state_angVal_18 ) state_error_i_previous_18 ) ) 20 ) (= pid_op.0_18 20 )(= pid_op.0_18 .add3_18 ) ) 
(= next_voltage_19 pid_op.0_18 ) 
(= state_error_i_previous_19 (+ (- 1 state_angVal_18 ) state_error_i_previous_18 ) ) 
  
 (= next_voltage_19 voltage_19_0 )  
 (= lt_19_t (+ lt_19_0 (* 1 time_19 ))) (= gt_19_t (+ gt_19_0 (* 1 time_19 ))) (= voltage_19_t (+ voltage_19_0 (* 0 time_19 ))) 
 (= [gt_19_t lt_19_t angVal_19_t i_19_t voltage_19_t ] (integral 0. time_19 [gt_19_0 lt_19_0 angVal_19_0 i_19_0 voltage_19_0 ] flow_1))  
 (<= lt_19_t 0.02) (<= lt_19_0 0.02) (= mode_20 1)  
 (= mode_20 1) (<= lt_19_t 0.02) (= gt_20_0 gt_19_t) (= lt_20_0 0)  
 (= angVal_20_0 (+ angVal_19_t Noise_angVal_19 ) )(= i_20_0 i_19_t)(= state_angVal_19 angVal_19_t )  
 (ite (< (+ (* (- 1 state_angVal_19 ) 40 ) (+ (- 1 state_angVal_19 ) state_error_i_previous_19 ) ) -20 ) (= .add3_19 -20 )(= .add3_19 (+ (* (- 1 state_angVal_19 ) 40 ) (+ (- 1 state_angVal_19 ) state_error_i_previous_19 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_19 ) 40 ) (+ (- 1 state_angVal_19 ) state_error_i_previous_19 ) ) 20 ) (= pid_op.0_19 20 )(= pid_op.0_19 .add3_19 ) ) 
(= next_voltage_20 pid_op.0_19 ) 
(= state_error_i_previous_20 (+ (- 1 state_angVal_19 ) state_error_i_previous_19 ) ) 
  
 (= next_voltage_20 voltage_20_0 )  
 (= lt_20_t (+ lt_20_0 (* 1 time_20 ))) (= gt_20_t (+ gt_20_0 (* 1 time_20 ))) (= voltage_20_t (+ voltage_20_0 (* 0 time_20 ))) 
 (= [gt_20_t lt_20_t angVal_20_t i_20_t voltage_20_t ] (integral 0. time_20 [gt_20_0 lt_20_0 angVal_20_0 i_20_0 voltage_20_0 ] flow_1))  
 (<= lt_20_t 0.02) (<= lt_20_0 0.02) (= mode_21 1)  
 (= mode_21 1) (<= lt_20_t 0.02) (= gt_21_0 gt_20_t) (= lt_21_0 0)  
 (= angVal_21_0 (+ angVal_20_t Noise_angVal_20 ) )(= i_21_0 i_20_t)(= state_angVal_20 angVal_20_t )  
 (ite (< (+ (* (- 1 state_angVal_20 ) 40 ) (+ (- 1 state_angVal_20 ) state_error_i_previous_20 ) ) -20 ) (= .add3_20 -20 )(= .add3_20 (+ (* (- 1 state_angVal_20 ) 40 ) (+ (- 1 state_angVal_20 ) state_error_i_previous_20 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_20 ) 40 ) (+ (- 1 state_angVal_20 ) state_error_i_previous_20 ) ) 20 ) (= pid_op.0_20 20 )(= pid_op.0_20 .add3_20 ) ) 
(= next_voltage_21 pid_op.0_20 ) 
(= state_error_i_previous_21 (+ (- 1 state_angVal_20 ) state_error_i_previous_20 ) ) 
  
 (= next_voltage_21 voltage_21_0 )  
 (= lt_21_t (+ lt_21_0 (* 1 time_21 ))) (= gt_21_t (+ gt_21_0 (* 1 time_21 ))) (= voltage_21_t (+ voltage_21_0 (* 0 time_21 ))) 
 (= [gt_21_t lt_21_t angVal_21_t i_21_t voltage_21_t ] (integral 0. time_21 [gt_21_0 lt_21_0 angVal_21_0 i_21_0 voltage_21_0 ] flow_1))  
 (<= lt_21_t 0.02) (<= lt_21_0 0.02) (= mode_22 1)  
 (= mode_22 1) (<= lt_21_t 0.02) (= gt_22_0 gt_21_t) (= lt_22_0 0)  
 (= angVal_22_0 (+ angVal_21_t Noise_angVal_21 ) )(= i_22_0 i_21_t)(= state_angVal_21 angVal_21_t )  
 (ite (< (+ (* (- 1 state_angVal_21 ) 40 ) (+ (- 1 state_angVal_21 ) state_error_i_previous_21 ) ) -20 ) (= .add3_21 -20 )(= .add3_21 (+ (* (- 1 state_angVal_21 ) 40 ) (+ (- 1 state_angVal_21 ) state_error_i_previous_21 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_21 ) 40 ) (+ (- 1 state_angVal_21 ) state_error_i_previous_21 ) ) 20 ) (= pid_op.0_21 20 )(= pid_op.0_21 .add3_21 ) ) 
(= next_voltage_22 pid_op.0_21 ) 
(= state_error_i_previous_22 (+ (- 1 state_angVal_21 ) state_error_i_previous_21 ) ) 
  
 (= next_voltage_22 voltage_22_0 )  
 (= lt_22_t (+ lt_22_0 (* 1 time_22 ))) (= gt_22_t (+ gt_22_0 (* 1 time_22 ))) (= voltage_22_t (+ voltage_22_0 (* 0 time_22 ))) 
 (= [gt_22_t lt_22_t angVal_22_t i_22_t voltage_22_t ] (integral 0. time_22 [gt_22_0 lt_22_0 angVal_22_0 i_22_0 voltage_22_0 ] flow_1))  
 (<= lt_22_t 0.02) (<= lt_22_0 0.02) (= mode_23 1)  
 (= mode_23 1) (<= lt_22_t 0.02) (= gt_23_0 gt_22_t) (= lt_23_0 0)  
 (= angVal_23_0 (+ angVal_22_t Noise_angVal_22 ) )(= i_23_0 i_22_t)(= state_angVal_22 angVal_22_t )  
 (ite (< (+ (* (- 1 state_angVal_22 ) 40 ) (+ (- 1 state_angVal_22 ) state_error_i_previous_22 ) ) -20 ) (= .add3_22 -20 )(= .add3_22 (+ (* (- 1 state_angVal_22 ) 40 ) (+ (- 1 state_angVal_22 ) state_error_i_previous_22 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_22 ) 40 ) (+ (- 1 state_angVal_22 ) state_error_i_previous_22 ) ) 20 ) (= pid_op.0_22 20 )(= pid_op.0_22 .add3_22 ) ) 
(= next_voltage_23 pid_op.0_22 ) 
(= state_error_i_previous_23 (+ (- 1 state_angVal_22 ) state_error_i_previous_22 ) ) 
  
 (= next_voltage_23 voltage_23_0 )  
 (= lt_23_t (+ lt_23_0 (* 1 time_23 ))) (= gt_23_t (+ gt_23_0 (* 1 time_23 ))) (= voltage_23_t (+ voltage_23_0 (* 0 time_23 ))) 
 (= [gt_23_t lt_23_t angVal_23_t i_23_t voltage_23_t ] (integral 0. time_23 [gt_23_0 lt_23_0 angVal_23_0 i_23_0 voltage_23_0 ] flow_1))  
 (<= lt_23_t 0.02) (<= lt_23_0 0.02) (= mode_24 1)  
 (= mode_24 1) (<= lt_23_t 0.02) (= gt_24_0 gt_23_t) (= lt_24_0 0)  
 (= angVal_24_0 (+ angVal_23_t Noise_angVal_23 ) )(= i_24_0 i_23_t)(= state_angVal_23 angVal_23_t )  
 (ite (< (+ (* (- 1 state_angVal_23 ) 40 ) (+ (- 1 state_angVal_23 ) state_error_i_previous_23 ) ) -20 ) (= .add3_23 -20 )(= .add3_23 (+ (* (- 1 state_angVal_23 ) 40 ) (+ (- 1 state_angVal_23 ) state_error_i_previous_23 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_23 ) 40 ) (+ (- 1 state_angVal_23 ) state_error_i_previous_23 ) ) 20 ) (= pid_op.0_23 20 )(= pid_op.0_23 .add3_23 ) ) 
(= next_voltage_24 pid_op.0_23 ) 
(= state_error_i_previous_24 (+ (- 1 state_angVal_23 ) state_error_i_previous_23 ) ) 
  
 (= next_voltage_24 voltage_24_0 )  
 (= lt_24_t (+ lt_24_0 (* 1 time_24 ))) (= gt_24_t (+ gt_24_0 (* 1 time_24 ))) (= voltage_24_t (+ voltage_24_0 (* 0 time_24 ))) 
 (= [gt_24_t lt_24_t angVal_24_t i_24_t voltage_24_t ] (integral 0. time_24 [gt_24_0 lt_24_0 angVal_24_0 i_24_0 voltage_24_0 ] flow_1))  
 (<= lt_24_t 0.02) (<= lt_24_0 0.02) (= mode_25 1)  
 (= mode_25 1) (<= lt_24_t 0.02) (= gt_25_0 gt_24_t) (= lt_25_0 0)  
 (= angVal_25_0 (+ angVal_24_t Noise_angVal_24 ) )(= i_25_0 i_24_t)(= state_angVal_24 angVal_24_t )  
 (ite (< (+ (* (- 1 state_angVal_24 ) 40 ) (+ (- 1 state_angVal_24 ) state_error_i_previous_24 ) ) -20 ) (= .add3_24 -20 )(= .add3_24 (+ (* (- 1 state_angVal_24 ) 40 ) (+ (- 1 state_angVal_24 ) state_error_i_previous_24 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_24 ) 40 ) (+ (- 1 state_angVal_24 ) state_error_i_previous_24 ) ) 20 ) (= pid_op.0_24 20 )(= pid_op.0_24 .add3_24 ) ) 
(= next_voltage_25 pid_op.0_24 ) 
(= state_error_i_previous_25 (+ (- 1 state_angVal_24 ) state_error_i_previous_24 ) ) 
  
 (= next_voltage_25 voltage_25_0 )  
 (= lt_25_t (+ lt_25_0 (* 1 time_25 ))) (= gt_25_t (+ gt_25_0 (* 1 time_25 ))) (= voltage_25_t (+ voltage_25_0 (* 0 time_25 ))) 
 (= [gt_25_t lt_25_t angVal_25_t i_25_t voltage_25_t ] (integral 0. time_25 [gt_25_0 lt_25_0 angVal_25_0 i_25_0 voltage_25_0 ] flow_1))  
 (<= lt_25_t 0.02) (<= lt_25_0 0.02) (= mode_26 1)  
 (= mode_26 1) (<= lt_25_t 0.02) (= gt_26_0 gt_25_t) (= lt_26_0 0)  
 (= angVal_26_0 (+ angVal_25_t Noise_angVal_25 ) )(= i_26_0 i_25_t)(= state_angVal_25 angVal_25_t )  
 (ite (< (+ (* (- 1 state_angVal_25 ) 40 ) (+ (- 1 state_angVal_25 ) state_error_i_previous_25 ) ) -20 ) (= .add3_25 -20 )(= .add3_25 (+ (* (- 1 state_angVal_25 ) 40 ) (+ (- 1 state_angVal_25 ) state_error_i_previous_25 ) ) ) ) 
(ite (> (+ (* (- 1 state_angVal_25 ) 40 ) (+ (- 1 state_angVal_25 ) state_error_i_previous_25 ) ) 20 ) (= pid_op.0_25 20 )(= pid_op.0_25 .add3_25 ) ) 
(= next_voltage_26 pid_op.0_25 ) 
(= state_error_i_previous_26 (+ (- 1 state_angVal_25 ) state_error_i_previous_25 ) ) 
  
 (= next_voltage_26 voltage_26_0 )  
 (= lt_26_t (+ lt_26_0 (* 1 time_26 ))) (= gt_26_t (+ gt_26_0 (* 1 time_26 ))) (= voltage_26_t (+ voltage_26_0 (* 0 time_26 ))) 
 (= [gt_26_t lt_26_t angVal_26_t i_26_t voltage_26_t ] (integral 0. time_26 [gt_26_0 lt_26_0 angVal_26_0 i_26_0 voltage_26_0 ] flow_1))  
 (forall_t 1 [0 time_26] (<= lt_26_t 0.02))   
 (<= lt_26_t 0.02) (<= lt_26_0 0.02) (= mode_26 1)  
 (> gt_26_t 0.8  ) ))
 (check-sat)
(exit)