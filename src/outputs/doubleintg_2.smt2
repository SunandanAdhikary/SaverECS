(set-logic QF_NRA_ODE)
(declare-fun x () Real [-100, 100])
(declare-fun v () Real [-100, 100])
(declare-fun a () Real [-100, 100])
(declare-fun lt () Real [0.000000, 0.051])
(declare-fun gt () Real [0.000000, 3])
(declare-fun state_x_0 () Real [-100, 100] )
(declare-fun state_v_0 () Real [-100, 100] )
(declare-fun next_a_0 () Real [-100, 100] )
(declare-fun x_0_0 () Real [-100, 100])
(declare-fun x_0_t () Real [-100, 100])
(declare-fun v_0_0 () Real [-100, 100])
(declare-fun v_0_t () Real [-100, 100])
(declare-fun a_0_0 () Real [-100, 100])
(declare-fun a_0_t () Real [-100, 100])
(declare-fun lt_0_0 () Real [0.000000, 0.051])
(declare-fun lt_0_t () Real [0.000000, 0.051])
(declare-fun gt_0_0 () Real [0.000000, 3])
(declare-fun gt_0_t () Real [0.000000, 3])
(declare-fun time_0 () Real [0.049, 0.051])
(declare-fun mode_0 () Real [1.000000, 1.000000])
(declare-fun Noise__-1 () Real [0, 0])
(declare-fun state_x_1 () Real [-100, 100] )
(declare-fun state_v_1 () Real [-100, 100] )
(declare-fun next_a_1 () Real [-100, 100] )
(declare-fun x_1_0 () Real [-100, 100])
(declare-fun x_1_t () Real [-100, 100])
(declare-fun v_1_0 () Real [-100, 100])
(declare-fun v_1_t () Real [-100, 100])
(declare-fun a_1_0 () Real [-100, 100])
(declare-fun a_1_t () Real [-100, 100])
(declare-fun lt_1_0 () Real [0.000000, 0.051])
(declare-fun lt_1_t () Real [0.000000, 0.051])
(declare-fun gt_1_0 () Real [0.000000, 3])
(declare-fun gt_1_t () Real [0.000000, 3])
(declare-fun time_1 () Real [0.049, 0.051])
(declare-fun mode_1 () Real [1.000000, 1.000000])
(declare-fun state_x_2 () Real [-100, 100] )
(declare-fun state_v_2 () Real [-100, 100] )
(declare-fun next_a_2 () Real [-100, 100] )
(declare-fun x_2_0 () Real [-100, 100])
(declare-fun x_2_t () Real [-100, 100])
(declare-fun v_2_0 () Real [-100, 100])
(declare-fun v_2_t () Real [-100, 100])
(declare-fun a_2_0 () Real [-100, 100])
(declare-fun a_2_t () Real [-100, 100])
(declare-fun lt_2_0 () Real [0.000000, 0.051])
(declare-fun lt_2_t () Real [0.000000, 0.051])
(declare-fun gt_2_0 () Real [0.000000, 3])
(declare-fun gt_2_t () Real [0.000000, 3])
(declare-fun time_2 () Real [0.000000, 0.051])
(declare-fun mode_2 () Real [1.000000, 1.000000])
(define-ode flow_1 ((= d/dt[gt] 1) (= d/dt[lt] 1) (= d/dt[x]  v) (= d/dt[v]  a) (= d/dt[a] 0)))
(assert (and (= lt_0_0 0) (= gt_0_0 0) (= a_0_0 0 )(= v_0_0 0 )(= x_0_0 0 )(= mode_0 1)  
 (= lt_0_t (+ lt_0_0 (* 1 0.05))) (= gt_0_t (+ gt_0_0 (* 1 0.05))) (= a_0_t (+ a_0_0 (* 0 0.05))) 
 (= [gt_0_t lt_0_t x_0_t v_0_t a_0_t ] (integral 0. time_0 [gt_0_0 lt_0_0 x_0_0 v_0_0 a_0_0 ] flow_1))  
 (= mode_1 1) (= lt_0_t 0.05) (= gt_1_0 gt_0_t) (= lt_1_0 0)  
 (= x_1_0 x_0_t)(= v_1_0 v_0_t) 
 (= state_x_0 x_0_t ) (= state_v_0 v_0_t )  
 (= next_a_1 (- (* (- 1 state_x_0 ) 10 ) (* state_v_0 3 ) ) ) 
  
 (= next_a_1 a_1_0 )  
 (= lt_1_t (+ lt_1_0 (* 1 time_1 ))) (= gt_1_t (+ gt_1_0 (* 1 time_1 ))) (= a_1_t (+ a_1_0 (* 0 time_1 ))) 
 (= [gt_1_t lt_1_t x_1_t v_1_t a_1_t ] (integral 0. time_1 [gt_1_0 lt_1_0 x_1_0 v_1_0 a_1_0 ] flow_1))  
 (<= lt_1_t 0.051) (<= lt_1_0 0.051) (= mode_2 1)  
 (= mode_2 1) (<= lt_1_t 0.051) (= gt_2_0 gt_1_t) (= lt_2_0 0)  
 (= x_2_0 x_1_t)(= v_2_0 v_1_t) 
 (= state_x_1 x_1_t ) (= state_v_1 v_1_t )  
 (= next_a_2 (- (* (- 1 state_x_1 ) 10 ) (* state_v_1 3 ) ) ) 
  
 (= next_a_2 a_2_0 )  
 (= lt_2_t (+ lt_2_0 (* 1 time_2 ))) (= gt_2_t (+ gt_2_0 (* 1 time_2 ))) (= a_2_t (+ a_2_0 (* 0 0.05 ))) 
 (= [gt_2_t lt_2_t x_2_t v_2_t a_2_t ] (integral 0. time_2 [gt_2_0 lt_2_0 x_2_0 v_2_0 a_2_0 ] flow_1))  
 (forall_t 1 [0 time_2] (<= lt_2_t 0.051))   
 (<= lt_2_t 0.051) (<= lt_2_0 0.051) (= mode_2 1)  
 (> gt_2_t 1  ) ))
 (check-sat)
(exit)